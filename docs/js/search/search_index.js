var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AWBOptions.html",[0,1.375,1,1.827]],["body/interfaces/AWBOptions.html",[0,1.618,1,3.227,2,2.702,3,0.43,4,0.43,5,0.377,6,0.885,7,0.377,8,2.395,9,0.377,10,1.138,11,0.951,12,4.055,13,2.767,14,0.486,15,0.034,16,1.039,17,3.842,18,4.003,19,3.113,20,0.669,21,4.003,22,2.702,23,1.607,24,3.113,25,1.636,26,3.113,27,1.374,28,2.278,29,3.113,30,0.668,31,3.842,32,1.256,33,1.875,34,2.702,35,2.765,36,3.113,37,3.405,38,3.113,39,2.702,40,0.141,41,2.503,42,1.771,43,3.113,44,1.361,45,2.108,46,1.907,47,3.113,48,2.395,49,1.483,50,0.025,51,0.025]],["title/components/AppComponent.html",[52,0.626,53,0.975]],["body/components/AppComponent.html",[3,0.476,4,0.476,5,0.418,15,0.033,16,0.741,20,0.741,30,0.476,40,0.157,50,0.026,51,0.026,52,1.098,53,1.788,54,2.035,55,1.793,56,1.793,57,3.448,58,1.793,59,2.745,60,2.307,61,2.67,62,2.221,63,1.793,64,2.221,65,2.035,66,1.793,67,2.522,68,1.793,69,0.83,70,1.793,71,1.271,72,1.643,73,1.793,74,1.271,75,1.793,76,1.271,77,1.793,78,1.271,79,1.793,80,1.271,81,1.793,82,1.271,83,1.793,84,1.271,85,1.643,86,1.793,87,1.793]],["title/modules/AppModule.html",[88,2.645,89,2.035]],["body/modules/AppModule.html",[3,0.351,4,0.351,5,0.307,7,0.307,12,2.204,15,0.034,16,1.145,17,3.034,20,0.546,30,0.351,39,3.034,40,0.115,41,2.824,50,0.022,51,0.022,53,1.879,71,1.721,74,1.721,76,1.721,78,1.721,80,1.721,82,1.721,84,1.721,89,4.1,90,1.754,91,2.69,92,2.539,93,2.539,94,2.539,95,2.539,96,3.495,97,2.539,98,2.539,99,3.048,100,4.196,101,4.196,102,4.196,103,3.048,104,4.196,105,3.048,106,4.196,107,3.495,108,3.048,109,4.196,110,3.048,111,4.196,112,3.048,113,4.196,114,3.048,115,3.048,116,4.196,117,3.048,118,4.196,119,3.048,120,4.196,121,3.048,122,4.196,123,3.048,124,2.539,125,4.196,126,1.445,127,1.445,128,4.196,129,3.048,130,1.32,131,1.11,132,3.048,133,3.048,134,3.048,135,3.048,136,3.048,137,3.048,138,3.048,139,4.196,140,1.754,141,3.048,142,3.048,143,3.048,144,1.019]],["title/classes/AppPage.html",[40,0.12,145,2.296]],["body/classes/AppPage.html",[3,0.514,4,0.514,5,0.451,9,0.451,15,0.033,16,0.8,30,0.514,32,1.162,40,0.169,50,0.028,51,0.028,61,2.327,65,1.773,140,2.571,145,3.884,146,2.327,147,3.722,148,0.962,149,5.975,150,5.975,151,0.869,152,4.467,153,0.962,154,5.172,155,4.467,156,4.467,157,4.467,158,4.467,159,3.23,160,4.467]],["title/components/BatteryLevelComponent.html",[52,0.626,71,0.975]],["body/components/BatteryLevelComponent.html",[3,0.203,4,0.203,5,0.178,7,0.178,9,0.178,10,0.663,11,0.622,14,0.709,15,0.034,16,0.772,20,0.316,23,1.322,25,0.98,27,1.243,30,0.4,32,0.382,33,0.936,40,0.067,44,1.57,45,1.111,46,1.111,49,1.111,50,0.014,51,0.014,52,0.686,53,0.543,54,1.111,55,0.766,56,0.766,58,0.766,59,2.277,60,1.914,62,1.213,63,0.766,64,1.213,65,1.111,66,0.766,67,1.713,68,0.766,69,0.698,70,0.766,71,1.215,72,1.569,73,0.766,74,0.543,75,0.766,76,0.543,77,0.766,78,0.543,79,0.766,80,0.543,81,0.766,82,0.543,83,0.766,84,0.543,85,0.701,86,0.766,87,0.766,124,2.896,126,0.838,127,0.838,130,0.766,131,0.643,148,0.501,151,0.943,153,0.86,159,2.514,161,1.648,162,4.241,163,1.278,164,1.111,165,1.811,166,1.811,167,2.514,168,1.811,169,2.388,170,4.585,171,3.476,172,3.71,173,3.476,174,3.476,175,3.316,176,3.316,177,2.896,178,3.82,179,3.82,180,2.896,181,3.316,182,3.316,183,3.316,184,3.476,185,2.514,186,2.896,187,1.811,188,3.476,189,3.476,190,3.316,191,3.476,192,3.476,193,1.648,194,2.896,195,2.514,196,2.896,197,3.476,198,1.561,199,2.896,200,3.476,201,3.476,202,1.716,203,4.31,204,3.476,205,3.476,206,1.408,207,2.245,208,1.811,209,1.811,210,1.322,211,3.955,212,1.458,213,2.06,214,2.06,215,2.06,216,1.458,217,1.458,218,1.57,219,0.79,220,0.92,221,1.814,222,2.245,223,1.767,224,0.686,225,1.767,226,1.355,227,1.767,228,1.458,229,1.115,230,1.767,231,1.38,232,1.767,233,1.767,234,1.767,235,1.458,236,2.043,237,1.767,238,1.648,239,1.811,240,1.767,241,1.767,242,2.502,243,1.767,244,3.955,245,1.767,246,1.767,247,1.767,248,1.767,249,2.245,250,1.767,251,1.767,252,0.838,253,1.767,254,0.838,255,0.92,256,1.266,257,1.213,258,1.327,259,1.327,260,0.838,261,0.838,262,0.92,263,0.92,264,0.92,265,0.838,266,0.92,267,1.458,268,0.92,269,0.92,270,0.591,271,1.278,272,1.767,273,0.766,274,1.767,275,1.767,276,0.92,277,0.92,278,1.767,279,1.767,280,1.767,281,1.767,282,1.767,283,2.799,284,1.133,285,3.476,286,1.767,287,1.811,288,1.017,289,1.767,290,1.133,291,0.92,292,0.92,293,0.92,294,0.838,295,0.92,296,0.92,297,0.92,298,0.92,299,1.767,300,0.92,301,0.92,302,1.767,303,0.92,304,0.92,305,0.92,306,1.767,307,1.767,308,1.767]],["title/injectables/BleService.html",[221,1.156,309,0.975]],["body/injectables/BleService.html",[3,0.398,4,0.398,5,0.349,7,0.349,9,0.349,10,1.083,11,0.818,14,0.736,15,0.034,16,0.917,20,0.62,23,1.893,30,0.398,32,1.108,35,2.63,40,0.131,50,0.024,51,0.024,60,1.983,61,1.802,69,0.828,130,1.499,131,1.26,148,0.818,151,0.974,153,1.014,198,1.597,202,1.529,206,1.404,219,0.976,221,1.664,224,0.901,226,1.289,229,1.324,236,2.167,252,2.581,270,1.157,273,1.98,294,1.64,309,1.404,310,1.802,311,2.502,312,2.666,313,5.119,314,3.808,315,5.445,316,5.445,317,3.46,318,4.571,319,4.571,320,4.845,321,3.46,322,3.46,323,3.46,324,3.46,325,3.46,326,3.46,327,3.46,328,3.46,329,3.46,330,1.991,331,2.218,332,2.502,333,2.502,334,2.882,335,1.991,336,3.46,337,3.46,338,3.46,339,4.571,340,2.882,341,3.46,342,3.46,343,3.46,344,3.46]],["title/injectables/BrowserWebBluetooth.html",[25,0.895,309,0.975]],["body/injectables/BrowserWebBluetooth.html",[3,0.478,4,0.478,5,0.419,6,1.381,7,0.588,9,0.419,10,1.218,11,0.744,14,0.54,15,0.033,16,0.744,20,0.744,25,1.45,30,0.478,32,0.9,33,1.39,35,2.392,40,0.157,50,0.026,51,0.026,60,2.032,69,0.673,131,1.514,140,2.392,148,0.92,151,0.903,153,0.744,154,4.282,219,1.574,224,0.82,309,1.579,310,2.165,312,2.907,340,4.282,345,3.463,346,5.14,347,5.14,348,5.14,349,5.58,350,4.157,351,4.157,352,4.157,353,4.157,354,3.463,355,4.157,356,4.157,357,4.157,358,3.463,359,4.157,360,4.157]],["title/injectables/ConsoleLoggerService.html",[27,0.821,309,0.975]],["body/injectables/ConsoleLoggerService.html",[0,1.671,3,0.444,4,0.444,5,0.389,6,1.344,7,0.572,9,0.389,11,0.965,14,0.701,15,0.034,16,0.691,20,0.691,27,1.268,28,1.828,30,0.621,40,0.186,50,0.025,51,0.025,61,2.554,69,0.873,148,0.878,151,0.873,153,0.965,164,1.946,224,1.063,226,1.689,229,1.395,231,1.946,284,3.143,309,1.656,310,2.009,331,3.143,361,2.472,362,3.546,363,3.899,364,3.856,365,4.33,366,3.899,367,3.856,368,3.899,369,3.856,370,3.103,371,2.789,372,2.789,373,2.789,374,2.789,375,2.789,376,2.789]],["title/components/DashboardComponent.html",[52,0.626,74,0.975]],["body/components/DashboardComponent.html",[3,0.333,4,0.333,5,0.292,9,0.292,15,0.034,16,0.519,20,0.519,30,0.333,40,0.11,50,0.021,51,0.021,52,0.921,53,0.889,54,1.607,55,1.254,56,1.254,58,1.254,59,2.575,60,2.165,62,1.254,63,1.254,64,1.754,65,1.607,66,1.254,67,2.191,68,1.254,69,0.655,70,1.254,71,0.889,72,1.853,73,1.254,74,1.553,75,1.254,76,0.889,77,1.254,78,0.889,79,1.254,80,0.889,81,1.254,82,0.889,83,1.254,84,0.889,85,1.853,86,1.254,87,1.254,151,0.469,159,2.094,161,1.373,167,3.988,172,2.094,175,2.094,176,2.094,181,3.377,182,2.928,183,3.377,185,2.928,190,2.928,193,1.373,194,2.412,195,2.094,196,2.412,210,1.988,219,1.317,239,1.508,358,2.412,377,2.412,378,5.057,379,4.05,380,4.67,381,4.05,382,4.05,383,2.896,384,4.05,385,4.05,386,3.374,387,5.945,388,5.945,389,3.421,390,5.945,391,5.945,392,2.928,393,4.05,394,3.374,395,2.896,396,2.896,397,2.896,398,2.094,399,2.896,400,2.91,401,3.988,402,2.896,403,2.896,404,2.896,405,2.896,406,1.666,407,1.666,408,2.896,409,2.896,410,4.05,411,5.057,412,4.05,413,2.896,414,4.67,415,2.896,416,2.896]],["title/classes/FakeBluetoothDevice.html",[40,0.12,417,1.654]],["body/classes/FakeBluetoothDevice.html",[3,0.31,4,0.31,5,0.272,6,1.367,7,0.582,9,0.272,10,1.16,11,0.689,13,1.404,14,0.7,15,0.034,30,0.564,32,1.06,40,0.185,50,0.02,51,0.02,69,0.898,144,0.902,146,1.404,148,0.689,151,0.918,153,0.804,198,1.267,202,1.855,206,0.828,210,1.733,218,1.402,219,0.76,224,0.759,226,1.267,229,1.562,238,1.278,239,1.404,256,1.402,270,1.638,287,2.339,288,1.552,312,2.699,330,2.584,335,2.584,389,1.552,417,2.006,418,1.552,419,2.879,420,3.14,421,3.14,422,3.208,423,3.321,424,2.696,425,2.696,426,2.468,427,2.696,428,3.85,429,3.14,430,2.696,431,2.879,432,3.454,433,3.454,434,2.696,435,2.696,436,2.696,437,3.14,438,2.468,439,2.468,440,2.468,441,1.728,442,2.468,443,2.468,444,1.728,445,2.468,446,1.728,447,2.468,448,1.404,449,1.528,450,1.728,451,1.728,452,2.468,453,1.728,454,1.728,455,1.728,456,1.728,457,1.728,458,1.404,459,1.728,460,1.728,461,1.728,462,1.728,463,1.728,464,1.404,465,2.468,466,1.728,467,3.14,468,2.879,469,1.728,470,1.728,471,2.468,472,1.728,473,1.728,474,1.728,475,1.728]],["title/classes/FakeBluetoothRemoteGATTCharacteristic.html",[40,0.12,464,1.654]],["body/classes/FakeBluetoothRemoteGATTCharacteristic.html",[3,0.303,4,0.303,5,0.265,6,1.38,7,0.588,9,0.265,10,1.304,11,0.793,13,1.37,14,0.715,15,0.034,30,0.557,32,1.048,40,0.183,50,0.019,51,0.019,69,0.784,144,0.879,146,1.37,148,0.677,151,0.929,153,0.867,198,1.507,202,1.481,206,0.808,210,1.265,218,1.377,219,0.742,224,0.873,226,1.249,229,1.424,238,1.247,239,1.37,256,1.377,270,1.948,287,2.307,288,1.513,312,2.868,330,2.549,335,2.549,389,1.513,417,1.37,418,1.513,419,1.686,420,1.686,421,3.105,422,3.151,423,3.289,426,1.686,429,2.839,431,2.839,432,3.425,433,3.425,437,3.105,438,2.424,439,2.424,440,2.424,441,1.686,442,2.424,443,2.424,444,1.686,445,2.424,446,1.686,447,2.424,448,1.37,449,1.501,450,1.686,451,1.686,452,2.424,453,1.686,454,1.686,455,1.686,456,1.686,457,1.686,458,1.37,459,1.686,460,1.686,461,1.686,462,1.686,463,1.686,464,1.97,465,3.289,466,2.839,467,3.611,468,3.105,469,2.424,470,1.686,471,2.424,472,3.105,473,1.686,474,2.424,475,1.686,476,3.782,477,2.63,478,2.63,479,2.63,480,2.63,481,2.63,482,2.63,483,2.63,484,2.63,485,2.63,486,2.63]],["title/classes/FakeBluetoothRemoteGATTServer.html",[40,0.12,448,1.654]],["body/classes/FakeBluetoothRemoteGATTServer.html",[3,0.32,4,0.32,5,0.281,6,1.354,7,0.577,9,0.281,10,1.177,11,0.705,13,1.449,14,0.707,15,0.034,30,0.572,32,1.075,40,0.188,50,0.02,51,0.02,69,0.74,144,0.93,146,1.449,148,0.705,151,0.906,153,0.818,198,1.289,202,1.872,206,1.209,210,1.754,218,1.909,219,0.785,224,0.777,226,0.785,229,1.356,238,1.319,239,1.449,256,1.434,270,1.662,287,2.38,288,2.63,312,2.38,330,2.63,335,2.63,389,2.859,417,1.449,418,1.601,419,1.783,420,1.783,421,2.524,423,2.524,426,1.783,429,2.929,431,2.524,432,3.185,433,3.185,437,3.185,438,2.524,439,2.524,440,2.524,441,1.783,442,2.524,443,2.524,444,1.783,445,2.524,446,1.783,447,2.524,448,2.051,449,1.814,450,3.361,451,1.783,452,2.524,453,1.783,454,2.524,455,2.929,456,1.783,457,1.783,458,1.449,459,1.783,460,1.783,461,1.783,462,1.783,463,1.783,464,1.449,465,2.524,466,1.783,467,3.185,468,2.929,469,1.783,470,1.783,471,2.524,472,1.783,473,1.783,474,1.783,475,1.783,487,3.937,488,2.318,489,3.305,490,3.937,491,3.937,492,2.782,493,2.782,494,2.782]],["title/classes/FakeBluetoothRemoteGATTService.html",[40,0.12,458,1.654]],["body/classes/FakeBluetoothRemoteGATTService.html",[3,0.339,4,0.339,5,0.297,6,1.268,7,0.54,9,0.297,10,1.207,11,0.734,13,1.534,14,0.383,15,0.034,30,0.586,32,1.103,40,0.193,50,0.021,51,0.021,69,0.763,144,0.985,146,1.534,148,0.734,151,0.825,153,0.527,198,1.155,202,1.902,206,0.904,210,1.37,218,1.95,219,0.83,224,0.808,229,1.385,239,1.534,256,1.492,270,1.704,273,1.276,287,2.454,288,1.694,312,2.454,330,2.711,335,2.711,389,1.694,417,1.534,418,1.694,419,1.888,420,1.888,421,2.626,423,2.626,426,1.888,429,3.02,431,2.626,432,3.265,433,3.265,437,3.265,438,2.626,439,2.626,440,2.626,441,1.888,442,2.626,443,2.626,444,1.888,445,2.626,446,1.888,447,2.626,448,1.534,449,1.626,450,1.888,451,1.888,452,2.626,453,1.888,454,1.888,455,1.888,456,1.888,457,1.888,458,2.134,459,3.433,460,1.888,461,2.626,462,3.02,463,1.888,464,1.534,465,2.626,466,1.888,467,3.265,468,3.02,469,1.888,470,1.888,471,2.626,472,1.888,473,1.888,474,1.888,475,1.888,488,2.453,495,4.097,496,2.945,497,4.097,498,2.945]],["title/components/HumidityComponent.html",[52,0.626,76,0.975]],["body/components/HumidityComponent.html",[3,0.243,4,0.243,5,0.213,7,0.213,9,0.213,10,0.761,11,0.697,14,0.718,15,0.034,16,0.883,20,0.378,23,1.454,25,1.097,27,1.006,30,0.448,32,0.457,33,1.454,40,0.08,42,1.523,44,1.704,45,1.275,46,1.275,49,1.275,50,0.017,51,0.017,52,0.767,53,0.648,54,1.275,55,0.914,56,0.914,58,0.914,59,2.392,60,2.011,62,1.391,63,0.914,64,1.391,65,1.275,66,0.914,67,1.884,68,0.914,69,0.758,70,0.914,71,0.648,72,0.837,73,0.914,74,0.648,75,0.914,76,1.336,77,0.914,78,0.648,79,0.914,80,0.648,81,0.914,82,0.648,83,0.914,84,0.648,85,0.837,86,0.914,87,0.914,126,1,127,1,130,0.914,131,0.768,144,1.454,148,0.575,151,0.958,153,0.918,161,1.844,164,1.275,165,2.026,166,2.026,168,2.026,169,2.026,187,2.026,193,1.844,198,1.227,202,1.649,206,1.515,207,2.438,208,2.026,209,2.026,210,1.454,212,1.673,213,2.265,214,2.265,215,2.265,216,1.673,217,1.673,218,1.417,219,0.906,220,1.099,221,1.924,222,2.438,224,0.767,226,1.446,228,1.673,229,1.006,231,1.275,235,1.673,236,2.062,242,2.438,249,1.099,252,1,254,1,255,1.099,256,1.584,257,1.391,258,1.523,259,1.523,260,1,261,1,262,1.099,263,1.099,264,1.099,265,1,266,1.099,267,1.099,268,1.099,269,1.099,270,0.705,273,0.914,276,1.099,277,1.099,291,1.099,292,1.099,293,1.673,294,1.523,295,1.099,296,1.099,297,1.099,298,1.099,300,1.099,301,1.099,303,1.673,304,1.099,305,1.099,332,1.525,333,2.323,392,3.145,398,1.525,400,2.239,406,1.214,407,1.214,449,0.837,499,1.525,500,2.788,501,2.494,502,2.494,503,2.494,504,2.494,505,2.788,506,2.109,507,2.109,508,2.109,509,2.109,510,2.109,511,2.109,512,2.109,513,2.109,514,2.494,515,2.109,516,2.494,517,1.352,518,2.059,519,2.109,520,2.788,521,2.109,522,2.109,523,2.109,524,2.109,525,2.109,526,2.109,527,1.352,528,1.214,529,2.109,530,1.525,531,1.352,532,1.352,533,1.352,534,1.352,535,1.757,536,1.352,537,1.352,538,1.352,539,1.214,540,2.494,541,1.352,542,2.059,543,1.352,544,1.352,545,1.352,546,1.352,547,1.352,548,1.352,549,1.352,550,1.352,551,1.352,552,1.352,553,1.352,554,1.352,555,2.059,556,1.757,557,1.214,558,1.352,559,1.352,560,1.352,561,1.214]],["title/interfaces/Logger.html",[0,1.375,370,1.827]],["body/interfaces/Logger.html",[0,1.651,2,2.755,3,0.439,4,0.439,5,0.384,6,1.338,7,0.57,9,0.384,11,0.96,14,0.697,15,0.034,16,0.682,20,0.682,27,0.986,28,1.806,30,0.617,40,0.184,50,0.025,51,0.025,61,2.535,69,0.868,148,0.871,151,0.868,153,0.96,164,1.931,224,1.057,226,1.684,229,1.605,231,1.931,284,3.12,309,1.647,331,3.12,361,2.443,362,3.519,363,3.519,365,4.317,366,3.519,368,3.519,370,3.251,371,3.519,372,3.519,373,3.519,374,2.755,375,2.755,376,2.755,562,3.81,563,3.81,564,3.81]],["title/injectables/NoLoggerService.html",[28,1.505,309,0.975]],["body/injectables/NoLoggerService.html",[0,1.671,3,0.444,4,0.444,5,0.389,6,1.344,7,0.572,9,0.389,11,0.965,14,0.701,15,0.034,16,0.691,20,0.691,27,0.998,28,2.325,30,0.621,40,0.186,50,0.025,51,0.025,61,2.554,69,0.873,148,0.878,151,0.873,153,0.965,164,1.946,224,1.063,226,1.689,229,1.395,231,1.946,284,3.143,309,1.656,310,2.009,331,3.143,361,2.472,362,3.546,363,3.899,365,4.33,366,3.899,368,3.899,370,3.103,371,2.789,372,2.789,373,2.789,374,2.789,375,2.789,376,2.789,565,3.856,566,3.856,567,3.856]],["title/components/PressureComponent.html",[52,0.626,78,0.975]],["body/components/PressureComponent.html",[3,0.243,4,0.243,5,0.213,7,0.213,9,0.213,10,0.761,11,0.697,14,0.718,15,0.034,16,0.883,20,0.378,23,1.455,25,1.098,27,1.007,30,0.448,32,0.457,33,1.455,40,0.08,42,1.524,44,1.705,45,1.276,46,1.276,49,1.276,50,0.017,51,0.017,52,0.768,53,0.649,54,1.276,55,0.915,56,0.915,58,0.915,59,2.393,60,2.011,62,1.393,63,0.915,64,1.393,65,1.276,66,0.915,67,1.885,68,0.915,69,0.758,70,0.915,71,0.649,72,0.838,73,0.915,74,0.649,75,0.915,76,0.649,77,0.915,78,1.337,79,0.915,80,0.649,81,0.915,82,0.649,83,0.915,84,0.649,85,0.838,86,0.915,87,0.915,126,1.001,127,1.001,130,0.915,131,0.769,144,1.302,148,0.576,151,0.959,153,0.918,161,1.846,164,1.276,165,2.028,166,2.028,168,2.028,169,2.028,187,2.028,193,1.846,198,1.227,202,1.65,206,1.515,207,2.439,208,2.028,209,2.028,210,1.455,212,1.674,213,2.267,214,2.267,215,2.267,216,1.674,217,1.674,218,1.418,219,0.907,220,1.1,221,1.925,222,2.439,224,0.768,226,1.446,228,1.674,229,1.007,231,1.276,235,1.674,236,2.063,242,2.439,249,1.1,252,1.001,254,1.001,255,1.1,256,1.585,257,1.393,258,1.524,259,1.524,260,1.001,261,1.001,262,1.1,263,1.1,264,1.1,265,1.001,266,1.1,267,1.1,268,1.1,269,1.1,270,0.706,273,0.915,276,1.1,277,1.1,291,1.1,292,1.1,293,1.674,294,1.524,295,1.1,296,1.1,297,1.1,298,1.1,300,1.1,301,1.1,303,1.674,304,1.1,305,1.1,332,1.527,333,2.325,394,3.625,398,1.527,400,2.24,406,1.215,407,1.215,449,0.838,500,2.789,501,2.495,502,2.495,503,2.495,504,2.495,505,2.789,514,2.495,516,2.495,517,1.353,518,2.061,520,2.789,527,1.353,528,1.215,530,1.527,531,1.353,532,1.353,533,1.353,534,1.353,535,1.759,536,1.353,537,1.353,538,1.353,539,1.215,540,2.495,541,1.353,542,2.061,543,1.353,544,1.353,545,1.353,546,1.353,547,1.353,548,1.353,549,1.353,550,1.353,551,1.353,552,1.353,553,1.353,554,1.353,555,2.061,556,1.759,557,1.215,558,1.353,559,1.353,560,1.353,561,1.215,568,1.527,569,2.111,570,2.111,571,2.111,572,2.111,573,2.111,574,2.111,575,2.111,576,2.111,577,2.111,578,2.111,579,2.111,580,2.111,581,2.111,582,2.111,583,2.111,584,2.111,585,2.111]],["title/injectables/ServerWebBluetooth.html",[309,0.975,586,2.296]],["body/injectables/ServerWebBluetooth.html",[3,0.525,4,0.525,5,0.46,6,1.288,7,0.549,9,0.46,15,0.033,16,0.817,20,0.817,30,0.525,32,0.988,40,0.173,42,2.755,50,0.028,51,0.028,148,0.974,151,0.739,153,0.817,265,2.853,309,1.671,310,2.377,586,3.933,587,3.801,588,4.563,589,4.563,590,3.801,591,4.563]],["title/components/StepCounterComponent.html",[52,0.626,80,0.975]],["body/components/StepCounterComponent.html",[3,0.236,4,0.236,5,0.207,7,0.207,9,0.207,10,0.745,11,0.685,14,0.712,15,0.034,16,0.828,20,0.368,23,1.434,25,1.079,27,0.99,30,0.44,32,0.681,33,1.052,40,0.078,44,1.684,45,1.249,46,1.249,49,1.249,50,0.016,51,0.016,52,0.754,53,0.631,54,1.249,55,0.889,56,0.889,58,0.889,59,2.375,60,1.996,62,1.363,63,0.889,64,1.363,65,1.249,66,0.889,67,1.858,68,0.889,69,0.748,70,0.889,71,0.631,72,0.815,73,0.889,74,0.631,75,0.889,76,0.631,77,0.889,78,0.631,79,0.889,80,1.317,81,0.889,82,0.631,83,0.889,84,0.631,85,0.815,86,0.889,87,0.889,126,0.973,127,0.973,130,0.889,131,0.747,144,1.052,148,0.563,151,0.927,153,0.874,161,1.814,164,1.249,165,1.992,166,1.992,168,1.992,169,2.541,172,2.766,175,2.766,176,2.766,177,3.187,178,4.064,179,4.064,180,3.187,181,2.766,182,2.766,183,2.766,185,3.528,186,3.187,187,2.541,190,2.766,193,1.814,195,2.766,198,1.546,199,3.187,202,1.632,206,1.499,207,2.408,208,1.992,209,1.992,210,1.434,212,1.639,213,2.234,214,2.234,215,2.234,216,1.639,217,1.639,218,1.393,219,0.887,220,1.069,221,1.908,222,2.408,224,0.754,226,1.376,228,1.639,229,0.99,231,1.518,235,1.639,236,2.192,238,0.973,242,2.408,249,1.069,252,0.973,254,0.973,255,1.069,256,1.684,257,1.363,258,1.492,259,1.492,260,0.973,261,0.973,262,1.069,263,1.069,264,1.069,265,0.973,266,1.069,267,1.069,268,1.069,269,1.069,270,0.686,273,0.889,276,1.069,277,1.069,287,1.069,290,1.316,291,1.069,292,1.069,293,1.639,294,0.973,295,1.069,296,1.069,297,1.069,298,1.069,300,1.069,301,1.069,303,1.639,304,1.069,305,1.069,401,2.275,489,2.275,539,1.181,557,1.181,561,1.181,592,1.484,593,3.146,594,3.825,595,3.825,596,3.825,597,3.528,598,3.825,599,3.825,600,2.053,601,2.053,602,2.053,603,2.053,604,2.053,605,2.053,606,2.053,607,2.053,608,2.053,609,2.053,610,2.053,611,2.053,612,2.053,613,4.288,614,2.053,615,4.288,616,2.053,617,2.053,618,3.146,619,3.146,620,3.146,621,3.146,622,2.053,623,2.053,624,2.053]],["title/components/TempComponent.html",[52,0.626,82,0.975]],["body/components/TempComponent.html",[3,0.241,4,0.241,5,0.212,7,0.212,9,0.212,10,0.758,11,0.694,14,0.717,15,0.034,16,0.881,20,0.376,23,1.45,25,1.093,27,1.003,30,0.446,32,0.692,33,1.45,40,0.079,42,1.516,44,1.7,45,1.269,46,1.269,49,1.269,50,0.016,51,0.016,52,0.765,53,0.644,54,1.269,55,0.909,56,0.909,58,0.909,59,2.389,60,2.008,62,1.386,63,0.909,64,1.386,65,1.269,66,0.909,67,1.879,68,0.909,69,0.756,70,0.909,71,0.644,72,0.832,73,0.909,74,0.644,75,0.909,76,0.644,77,0.909,78,0.644,79,0.909,80,0.644,81,0.909,82,1.332,83,0.909,84,0.644,85,1.269,86,0.909,87,0.909,126,0.994,127,0.994,130,0.909,131,0.764,144,1.297,148,0.573,151,0.957,153,0.916,161,1.838,164,1.269,165,2.019,166,2.019,168,2.019,169,2.019,187,2.019,193,1.838,198,1.223,202,1.645,206,1.511,207,2.432,208,2.019,209,2.019,210,1.45,212,1.666,213,2.259,214,2.259,215,2.259,216,1.666,217,1.666,218,1.412,219,0.902,220,1.093,221,1.921,222,2.432,224,0.765,226,1.443,228,1.666,229,1.003,231,1.539,235,1.666,236,2.056,242,2.432,249,1.093,252,0.994,254,0.994,255,1.093,256,1.792,257,1.386,258,1.516,259,1.516,260,0.994,261,0.994,262,1.093,263,1.093,264,1.093,265,0.994,266,1.093,267,1.093,268,1.093,269,1.093,270,0.701,271,1.517,273,0.909,276,1.093,277,1.093,290,1.345,291,1.093,292,1.093,293,1.666,294,0.994,295,1.093,296,1.093,297,1.093,298,1.093,300,1.093,301,1.093,303,1.666,304,1.093,305,1.093,400,2.231,406,1.207,407,1.207,449,0.832,500,2.78,501,2.485,502,2.485,503,2.485,504,2.485,505,2.78,514,2.485,516,2.485,517,1.345,518,2.05,520,2.78,527,1.345,528,1.207,531,1.345,532,1.345,533,1.345,534,1.345,536,1.345,537,1.345,538,1.345,539,1.207,540,2.485,541,1.345,542,2.05,543,1.345,544,1.345,545,1.345,546,1.345,547,1.345,548,1.345,549,1.345,550,1.345,551,1.345,552,1.345,553,1.345,554,1.345,555,2.05,557,1.207,558,1.345,559,1.345,560,1.345,561,1.207,597,1.517,625,1.517,626,3.199,627,2.098,628,2.098,629,2.098,630,2.098,631,2.098,632,2.098,633,2.098,634,2.098,635,2.098,636,2.098,637,2.098,638,2.098,639,2.098,640,2.098,641,2.098,642,2.098,643,2.098,644,2.098,645,2.665,646,2.665,647,1.747]],["title/components/TemperatureComponent.html",[52,0.626,84,0.975]],["body/components/TemperatureComponent.html",[3,0.239,4,0.239,5,0.209,7,0.209,9,0.209,10,0.751,11,0.689,14,0.714,15,0.034,16,0.877,20,0.371,23,1.441,25,1.085,27,0.995,30,0.443,32,0.686,33,1.441,40,0.078,42,1.503,44,1.691,45,1.258,46,1.258,49,1.258,50,0.016,51,0.016,52,0.759,53,0.637,54,1.258,55,0.898,56,0.898,58,0.898,59,2.381,60,2.002,62,1.373,63,0.898,64,1.373,65,1.258,66,0.898,67,1.867,68,0.898,69,0.752,70,0.898,71,0.637,72,0.823,73,0.898,74,0.637,75,0.898,76,0.637,77,0.898,78,0.637,79,0.898,80,0.637,81,0.898,82,0.637,83,0.898,84,1.324,85,1.843,86,0.898,87,0.898,126,0.983,127,0.983,130,0.898,131,0.755,144,1.441,148,0.568,151,0.955,153,0.912,161,1.825,164,1.258,165,2.004,166,2.004,168,2.004,169,2.004,187,2.004,193,1.825,198,1.31,202,1.638,206,1.504,207,2.419,208,2.004,209,2.004,210,1.441,212,1.651,213,2.245,214,2.245,215,2.245,216,1.651,217,1.651,218,1.401,219,0.894,220,1.08,221,1.914,222,2.419,224,0.759,226,1.437,228,1.651,229,0.995,231,1.527,235,1.651,236,2.043,242,2.419,249,1.08,252,0.983,254,0.983,255,1.08,256,1.783,257,1.373,258,1.503,259,1.503,260,0.983,261,0.983,262,1.08,263,1.08,264,1.08,265,0.983,266,1.08,267,1.08,268,1.08,269,1.651,270,1.06,271,1.499,273,0.898,276,1.08,277,1.08,290,1.329,291,1.08,292,1.08,293,1.651,294,0.983,295,1.08,296,1.08,297,1.08,298,1.08,300,1.08,301,1.08,303,1.651,304,1.08,305,1.08,400,2.215,406,1.193,407,1.193,449,0.823,500,2.763,501,2.467,502,2.467,503,2.467,504,2.467,505,2.763,514,2.467,516,2.467,517,1.329,518,2.032,520,2.763,527,1.329,528,1.193,530,1.499,531,1.329,532,1.329,533,1.329,534,1.329,536,1.329,537,1.329,538,1.329,539,1.193,540,2.467,541,1.329,542,2.032,543,1.329,544,1.329,545,1.329,546,1.329,547,1.329,548,1.329,549,1.329,550,1.329,551,1.329,552,1.329,553,1.329,554,1.329,555,2.032,557,1.193,558,1.329,559,1.329,560,1.329,561,1.193,597,1.499,645,2.641,646,2.641,647,1.727,648,1.499,649,2.073,650,2.073,651,2.073,652,2.073,653,2.073,654,2.073,655,2.073,656,2.073,657,2.073,658,2.073,659,2.073,660,2.073,661,2.073,662,2.073,663,2.073,664,2.073,665,2.073]],["title/modules/WebBluetoothModule.html",[41,1.654,88,2.645]],["body/modules/WebBluetoothModule.html",[0,1.588,1,3.319,3,0.422,4,0.422,5,0.37,6,1.124,7,0.479,8,2.349,11,0.85,12,2.65,13,1.909,14,0.476,15,0.034,16,1.033,17,3.806,18,4.385,19,3.053,20,0.656,21,3.954,22,2.65,23,1.587,24,3.053,25,1.626,26,3.053,27,1.362,28,2.25,29,3.053,30,0.664,31,3.806,32,1.248,33,1.862,34,2.65,35,3.029,36,3.053,37,3.374,38,3.053,39,2.65,40,0.139,41,2.742,42,2.25,43,3.954,44,1.335,45,2.089,46,1.883,47,3.053,48,2.349,49,1.454,50,0.024,51,0.024,69,0.593,90,2.109,148,0.656,151,0.593,153,0.656,198,1.034,224,0.723,238,1.737,666,3.665,667,3.665]],["title/coverage.html",[668,3.595]],["body/coverage.html",[0,1.688,1,1.578,5,0.277,6,1.462,7,0.623,8,3.165,14,0.356,15,0.034,23,0.917,25,1.099,27,0.709,28,1.3,31,3.279,33,0.917,37,1.758,40,0.197,44,1.973,48,1.758,50,0.02,51,0.02,52,1.123,53,0.842,57,2.285,71,0.842,74,0.842,76,0.842,78,0.842,80,0.842,82,0.842,84,0.842,145,1.983,147,2.285,162,3.57,163,3.57,221,2.03,257,2.347,309,1.664,311,1.983,334,5.261,345,2.285,361,2.906,370,1.578,377,2.285,401,4.716,417,1.428,418,2.841,448,1.428,458,1.428,464,1.428,499,3.57,568,3.57,586,1.983,587,2.285,592,3.57,625,3.57,648,3.57,668,2.285,669,2.743,670,2.743,671,2.743,672,2.743,673,4.534,674,6.376,675,2.285,676,2.743,677,2.743,678,3.247,679,3.247,680,2.285,681,2.285,682,4.937,683,3.897,684,2.743,685,2.743,686,2.743,687,4.937,688,2.743,689,2.743,690,2.285,691,3.247,692,2.285,693,2.743,694,2.743]],["title/dependencies.html",[91,2.445,695,2.216]],["body/dependencies.html",[15,0.034,20,0.789,22,3.186,50,0.027,51,0.027,91,2.824,107,4.437,131,1.604,140,3.065,254,2.089,528,2.535,696,4.406,697,6.395,698,4.406,699,4.406,700,4.406,701,4.406,702,4.406,703,4.406,704,4.406,705,4.406,706,4.406,707,4.406,708,4.406,709,4.406,710,4.406,711,4.406,712,4.406,713,4.406,714,4.406,715,4.406,716,4.406,717,4.406,718,4.406]],["title/miscellaneous/functions.html",[719,1.386,720,3.177]],["body/miscellaneous/functions.html",[1,3.212,6,1.129,7,0.481,8,3.056,9,0.481,11,0.854,14,0.619,15,0.03,25,1.669,34,3.447,35,2.743,37,3.794,48,3.578,50,0.029,51,0.029,69,0.772,224,0.94,719,2.483,720,3.971,721,5.919]],["title/index.html",[9,0.268,722,2.66,723,2.66]],["body/index.html",[15,0.03,50,0.03,51,0.03,386,4.19,724,5.03,725,5.03,726,5.03,727,5.03]],["title/modules.html",[90,2.483]],["body/modules.html",[15,0.029,41,2.586,50,0.029,51,0.029,89,3.182,90,2.857,140,2.857,354,4.136,728,4.964,729,5.715,730,4.964,731,4.136]],["title/overview.html",[732,3.595]],["body/overview.html",[2,3.019,15,0.033,41,2.912,50,0.027,51,0.027,53,1.902,54,1.657,71,1.717,74,1.717,76,1.717,78,1.717,80,1.717,82,1.717,84,1.717,89,4.193,90,2.403,91,3.304,92,3.478,93,3.478,94,3.478,95,3.478,96,4.294,97,3.478,98,3.478,146,2.175,310,2.175,732,3.478,733,5.154,734,4.175,735,4.175,736,4.175]],["title/properties.html",[10,0.903,695,2.216]],["body/properties.html",[10,1.194,15,0.031,50,0.03,51,0.03,737,5.043,738,5.043]],["title/miscellaneous/typealiases.html",[719,1.386,739,3.814]],["body/miscellaneous/typealiases.html",[6,1.152,7,0.491,9,0.491,14,0.776,15,0.029,50,0.029,51,0.029,311,3.517,320,4.705,489,4.084,675,4.052,719,2.533,740,4.864,741,5.648,742,4.864,743,4.864]],["title/miscellaneous/variables.html",[719,1.386,744,3.177]],["body/miscellaneous/variables.html",[6,0.356,7,0.152,9,0.152,14,0.631,15,0.034,23,1.887,25,1.472,27,1.35,33,1.745,44,1.9,45,2.071,46,2.071,49,2.071,50,0.013,51,0.013,72,0.596,85,0.596,144,0.503,162,1.087,163,2.603,167,1.087,198,1.639,206,1.733,221,2.141,238,2.756,257,2.444,258,2.474,259,2.474,260,2.02,261,2.02,314,1.252,392,1.087,449,0.596,499,1.087,568,1.087,590,2.597,592,1.087,625,1.087,648,1.087,678,1.252,679,2.597,680,2.047,681,2.047,690,1.252,691,2.999,692,1.252,719,0.783,731,2.597,744,1.252,745,3.117,746,3.117,747,3.117,748,3.117,749,3.117,750,3.117,751,1.503,752,1.503,753,2.457,754,2.457,755,1.503,756,1.503,757,1.503,758,1.503,759,6.375,760,6.375,761,6.375,762,6.375,763,1.503,764,1.503,765,1.503,766,1.503,767,1.503,768,1.503,769,1.503,770,1.503,771,1.503,772,1.503,773,1.503,774,1.503,775,1.503,776,1.503,777,1.503,778,1.503,779,1.503,780,1.503,781,1.503,782,1.503,783,1.503,784,4.994,785,1.503,786,4.692,787,1.503,788,4.692,789,1.503,790,1.503,791,1.503,792,1.503,793,1.503,794,1.503,795,1.503,796,1.503,797,1.503,798,1.503,799,3.117,800,3.117,801,1.503,802,1.503,803,1.503,804,1.503,805,1.503,806,1.503,807,1.503,808,1.503,809,1.503,810,1.503,811,1.503,812,1.503,813,1.503,814,1.503,815,1.503,816,1.503,817,1.503,818,1.503,819,1.503,820,1.503,821,1.503,822,1.503,823,1.503,824,1.503,825,1.503,826,1.503,827,1.503,828,1.503,829,1.503,830,1.503,831,1.503,832,1.503,833,1.503,834,1.503,835,1.503,836,1.503,837,1.503,838,1.503,839,1.503,840,1.503,841,1.503,842,1.503,843,1.503,844,1.503,845,1.503,846,1.503,847,1.503,848,1.503,849,1.503,850,1.503,851,1.503,852,1.503,853,1.503,854,1.503,855,1.503,856,1.503,857,1.503,858,1.503]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/PressureComponent.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":401,"title":{},"body":{"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{},"coverage.html":{}}}],["0.0.6",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["0.12.0",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":674,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":684,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":689,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":687,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":688,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":673,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":672,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":682,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":686,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":685,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":683,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":199,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/StepCounterComponent.html":{}}}],["000000",{"_index":546,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["000000000000",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0451",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":406,"title":{},"body":{"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["1.35.0",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":597,"title":{},"body":{"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["10px",{"_index":414,"title":{},"body":{"components/DashboardComponent.html":{}}}],["112px",{"_index":594,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["11em",{"_index":596,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["120px",{"_index":186,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/StepCounterComponent.html":{}}}],["15.0.0",{"_index":738,"title":{},"body":{"properties.html":{}}}],["15.1.5",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["15px",{"_index":411,"title":{},"body":{"components/DashboardComponent.html":{}}}],["16px",{"_index":501,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["17",{"_index":548,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["181a",{"_index":644,"title":{},"body":{"components/TempComponent.html":{}}}],["2",{"_index":733,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["20px",{"_index":409,"title":{},"body":{"components/DashboardComponent.html":{}}}],["21/31",{"_index":677,"title":{},"body":{"coverage.html":{}}}],["214px",{"_index":595,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["222px",{"_index":184,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["24px",{"_index":189,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["255px",{"_index":197,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["29.0.5",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["2a6e",{"_index":643,"title":{},"body":{"components/TempComponent.html":{}}}],["32px",{"_index":416,"title":{},"body":{"components/DashboardComponent.html":{}}}],["4000",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40px",{"_index":397,"title":{},"body":{"components/DashboardComponent.html":{}}}],["4933",{"_index":619,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["5",{"_index":736,"title":{},"body":{"overview.html":{}}}],["5.1.1",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["52ffa9740042",{"_index":621,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["5em",{"_index":180,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/StepCounterComponent.html":{}}}],["5px",{"_index":194,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{}}}],["6",{"_index":735,"title":{},"body":{"overview.html":{}}}],["67",{"_index":676,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["700px",{"_index":399,"title":{},"body":{"components/DashboardComponent.html":{}}}],["8",{"_index":734,"title":{},"body":{"overview.html":{}}}],["90px",{"_index":192,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["9b10",{"_index":620,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["9b35",{"_index":618,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["__register__",{"_index":830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_config",{"_index":313,"title":{},"body":{"injectables/BleService.html":{}}}],["absolute",{"_index":182,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["accelerometer",{"_index":801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessors",{"_index":217,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["actual_component",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["addeventlistener",{"_index":422,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["addeventlistener(type",{"_index":431,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["address",{"_index":833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aliases",{"_index":740,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":176,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["angular/animations",{"_index":696,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/common",{"_index":22,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":20,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/PressureComponent.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/expansion",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/grid",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/list",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["angular/material/toolbar",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["app.component",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":53,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":89,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":145,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["args",{"_index":365,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["auto",{"_index":402,"title":{},"body":{"components/DashboardComponent.html":{}}}],["available",{"_index":731,"title":{},"body":{"modules.html":{},"miscellaneous/variables.html":{}}}],["awboptions",{"_index":1,"title":{"interfaces/AWBOptions.html":{}},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["b",{"_index":258,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["b000",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bar",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["barometer",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["battery",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["battery_charging_full",{"_index":200,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["battery_level",{"_index":274,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["battery_service",{"_index":272,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["batterylevelcomponent",{"_index":71,"title":{"components/BatteryLevelComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ble",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["ble.service",{"_index":255,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["blecore",{"_index":257,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bleservice",{"_index":221,"title":{"injectables/BleService.html":{}},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bleservice(b",{"_index":261,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["block",{"_index":187,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["bluetooth",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"dependencies.html":{}}}],["bluetooth.service",{"_index":24,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["bluetooth/src/lib/bluetooth.module.ts",{"_index":8,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["bluetooth/src/lib/bluetooth.module.ts:32",{"_index":667,"title":{},"body":{"modules/WebBluetoothModule.html":{}}}],["bluetooth/src/lib/bluetooth.service.ts",{"_index":675,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["bluetooth/src/lib/lang/uuids/ti",{"_index":678,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bluetooth/src/lib/logger.service.ts",{"_index":361,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"coverage.html":{}}}],["bluetooth/src/lib/logger.service.ts:13",{"_index":367,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["bluetooth/src/lib/logger.service.ts:16",{"_index":364,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["bluetooth/src/lib/logger.service.ts:19",{"_index":369,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["bluetooth/src/lib/logger.service.ts:28",{"_index":566,"title":{},"body":{"injectables/NoLoggerService.html":{}}}],["bluetooth/src/lib/logger.service.ts:29",{"_index":565,"title":{},"body":{"injectables/NoLoggerService.html":{}}}],["bluetooth/src/lib/logger.service.ts:30",{"_index":567,"title":{},"body":{"injectables/NoLoggerService.html":{}}}],["bluetooth/src/lib/logger.service.ts:4",{"_index":563,"title":{},"body":{"interfaces/Logger.html":{}}}],["bluetooth/src/lib/logger.service.ts:5",{"_index":562,"title":{},"body":{"interfaces/Logger.html":{}}}],["bluetooth/src/lib/logger.service.ts:6",{"_index":564,"title":{},"body":{"interfaces/Logger.html":{}}}],["bluetooth/src/lib/platform/browser.ts",{"_index":345,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{},"coverage.html":{}}}],["bluetooth/src/lib/platform/browser.ts:14",{"_index":350,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["bluetooth/src/lib/platform/browser.ts:5",{"_index":347,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["bluetooth/src/lib/platform/server.ts",{"_index":587,"title":{},"body":{"injectables/ServerWebBluetooth.html":{},"coverage.html":{}}}],["bluetooth/src/lib/platform/server.ts:5",{"_index":588,"title":{},"body":{"injectables/ServerWebBluetooth.html":{}}}],["bluetooth/src/lib/test.utils.ts",{"_index":418,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"coverage.html":{}}}],["bluetooth/src/lib/test.utils.ts:103",{"_index":485,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:12",{"_index":425,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["bluetooth/src/lib/test.utils.ts:14",{"_index":428,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["bluetooth/src/lib/test.utils.ts:17",{"_index":434,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["bluetooth/src/lib/test.utils.ts:24",{"_index":436,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["bluetooth/src/lib/test.utils.ts:29",{"_index":435,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["bluetooth/src/lib/test.utils.ts:39",{"_index":490,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{}}}],["bluetooth/src/lib/test.utils.ts:41",{"_index":491,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{}}}],["bluetooth/src/lib/test.utils.ts:45",{"_index":492,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{}}}],["bluetooth/src/lib/test.utils.ts:50",{"_index":494,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{}}}],["bluetooth/src/lib/test.utils.ts:54",{"_index":493,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{}}}],["bluetooth/src/lib/test.utils.ts:60",{"_index":496,"title":{},"body":{"classes/FakeBluetoothRemoteGATTService.html":{}}}],["bluetooth/src/lib/test.utils.ts:61",{"_index":497,"title":{},"body":{"classes/FakeBluetoothRemoteGATTService.html":{}}}],["bluetooth/src/lib/test.utils.ts:65",{"_index":498,"title":{},"body":{"classes/FakeBluetoothRemoteGATTService.html":{}}}],["bluetooth/src/lib/test.utils.ts:7",{"_index":427,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["bluetooth/src/lib/test.utils.ts:71",{"_index":482,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:72",{"_index":481,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:73",{"_index":479,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:74",{"_index":480,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:78",{"_index":477,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:8",{"_index":430,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["bluetooth/src/lib/test.utils.ts:86",{"_index":486,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:90",{"_index":483,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:97",{"_index":484,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth_disabled",{"_index":390,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bluetooth_searching",{"_index":388,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bluetoothcharacteristicproperties",{"_index":465,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["bluetoothcharacteristicuuid",{"_index":462,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["bluetoothcore",{"_index":23,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bluetoothcore(b",{"_index":260,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["bluetoothremotegattserver",{"_index":426,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["bluetoothserviceuuid",{"_index":455,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["boiler",{"_index":385,"title":{},"body":{"components/DashboardComponent.html":{}}}],["boolean",{"_index":13,"title":{},"body":{"interfaces/AWBOptions.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"modules/WebBluetoothModule.html":{}}}],["bootstrap",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["bordervisible",{"_index":544,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["bottom",{"_index":196,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{}}}],["browse",{"_index":729,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"injectables/BrowserWebBluetooth.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":157,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["browserwebbluetooth",{"_index":25,"title":{"injectables/BrowserWebBluetooth.html":{}},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"injectables/BrowserWebBluetooth.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["button",{"_index":413,"title":{},"body":{"components/DashboardComponent.html":{}}}],["canvas",{"_index":500,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["card",{"_index":410,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cc2650",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["center",{"_index":172,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["changelog",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["changevalue",{"_index":476,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["changevalue(value",{"_index":474,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["characteristic",{"_index":273,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["characteristics",{"_index":459,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["characteristicvaluechanged",{"_index":468,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["chart",{"_index":502,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["chartref",{"_index":503,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["class",{"_index":40,"title":{"classes/AppPage.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/PressureComponent.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{}}}],["classes",{"_index":146,"title":{},"body":{"classes/AppPage.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"overview.html":{}}}],["clear",{"_index":423,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["close",{"_index":305,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["cluster_appmodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["color",{"_index":201,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["commonmodule",{"_index":21,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["component",{"_index":52,"title":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["components",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"overview.html":{}}}],["config",{"_index":314,"title":{},"body":{"injectables/BleService.html":{},"miscellaneous/variables.html":{}}}],["config(options",{"_index":319,"title":{},"body":{"injectables/BleService.html":{}}}],["configuration",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connect",{"_index":389,"title":{},"body":{"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["connected",{"_index":288,"title":{},"body":{"components/BatteryLevelComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["console",{"_index":203,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["console.error.apply(console",{"_index":375,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["console.log('reading",{"_index":557,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["console.log.apply(console",{"_index":374,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["console.warn.apply(console",{"_index":376,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["consoleloggerservice",{"_index":27,"title":{"injectables/ConsoleLoggerService.html":{}},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consoleloggerserviceconfig",{"_index":48,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["consoleloggerserviceconfig(options",{"_index":34,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/functions.html":{}}}],["const",{"_index":256,"title":{},"body":{"components/BatteryLevelComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["constructor",{"_index":219,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["constructor(ble",{"_index":317,"title":{},"body":{"injectables/BleService.html":{}}}],["constructor(device",{"_index":488,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["constructor(id",{"_index":424,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["constructor(properties",{"_index":469,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["constructor(public",{"_index":335,"title":{},"body":{"injectables/BleService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["constructor(service",{"_index":220,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["container",{"_index":408,"title":{},"body":{"components/DashboardComponent.html":{}}}],["content",{"_index":159,"title":{},"body":{"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{}}}],["control",{"_index":837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["count",{"_index":613,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["counter",{"_index":623,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["coverage",{"_index":668,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current_used_parameters",{"_index":839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cyber",{"_index":726,"title":{},"body":{"index.html":{}}}],["d",{"_index":300,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["dashboard",{"_index":378,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard'},{'name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["dashboard.component.css",{"_index":380,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.html",{"_index":382,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard/dashboard.component",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["dashboardcomponent",{"_index":74,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dataview",{"_index":270,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["decimal",{"_index":646,"title":{},"body":{"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["declarations",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["decoder",{"_index":269,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["decoder(value",{"_index":329,"title":{},"body":{"injectables/BleService.html":{}}}],["decorators",{"_index":517,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["default",{"_index":238,"title":{},"body":{"components/BatteryLevelComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"components/StepCounterComponent.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":151,"title":{},"body":{"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/PressureComponent.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{}}}],["dependencies",{"_index":91,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":49,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/variables.html":{}}}],["details",{"_index":359,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["determinate",{"_index":244,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["device",{"_index":218,"title":{},"body":{"components/BatteryLevelComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["device.gatt",{"_index":451,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["device.name",{"_index":391,"title":{},"body":{"components/DashboardComponent.html":{}}}],["device_id",{"_index":835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["device_information",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["devicesubscription",{"_index":204,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["direction",{"_index":173,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["directions_walk",{"_index":599,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["directive",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["directives",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["disconnect",{"_index":210,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["disconnect_request",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disconnectdevice",{"_index":315,"title":{},"body":{"injectables/BleService.html":{}}}],["disconnected",{"_index":289,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["display",{"_index":169,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["documentation",{"_index":669,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["dynamic",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["e2e/src/app.po.ts",{"_index":147,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":155,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":152,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":266,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["ef680400",{"_index":617,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["ef680405",{"_index":622,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["element",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["element(by.css('app",{"_index":158,"title":{},"body":{"classes/AppPage.html":{}}}],["elementref",{"_index":516,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["enabletracing",{"_index":12,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/AppModule.html":{},"modules/WebBluetoothModule.html":{}}}],["environment",{"_index":691,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["environmental_sensing",{"_index":530,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TemperatureComponent.html":{}}}],["err",{"_index":297,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["error",{"_index":231,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["error('your",{"_index":353,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["error(...args",{"_index":363,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["error(args",{"_index":372,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["event",{"_index":443,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["eventlistener",{"_index":433,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["export",{"_index":30,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/PressureComponent.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{}}}],["f000180a",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000180f",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a19",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a23",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a24",{"_index":766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a25",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a26",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a27",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a28",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a29",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a2a",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a50",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa00",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa01",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa02",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa03",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa10",{"_index":802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa11",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa12",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa13",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa20",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa21",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa22",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa23",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa30",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa31",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa32",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa33",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa40",{"_index":795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa41",{"_index":796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa42",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa44",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa50",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa51",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa52",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa53",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa64",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa65",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa66",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa70",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa71",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa72",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa73",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa80",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa81",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa82",{"_index":819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa83",{"_index":820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ac00",{"_index":831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ac01",{"_index":832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ac02",{"_index":834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ac03",{"_index":836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ccc0",{"_index":838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ccc1",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ccc2",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ccc3",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffc0",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffc1",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffc2",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffc3",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffc4",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffe0",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffe1",{"_index":829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fakebluetoothdevice",{"_index":417,"title":{"classes/FakeBluetoothDevice.html":{}},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"coverage.html":{}}}],["fakebluetoothremotegattcharacteristic",{"_index":464,"title":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"coverage.html":{}}}],["fakebluetoothremotegattserver",{"_index":448,"title":{"classes/FakeBluetoothRemoteGATTServer.html":{}},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"coverage.html":{}}}],["fakebluetoothremotegattservice",{"_index":458,"title":{"classes/FakeBluetoothRemoteGATTService.html":{}},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"coverage.html":{}}}],["false",{"_index":449,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["ff0000",{"_index":552,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["ffffff",{"_index":541,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/PressureComponent.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{}}}],["fillstyle",{"_index":540,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["firmware_rev",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flex",{"_index":170,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["font",{"_index":178,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/StepCounterComponent.html":{}}}],["fontsize",{"_index":547,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["forroot",{"_index":666,"title":{},"body":{"modules/WebBluetoothModule.html":{}}}],["forroot(options",{"_index":43,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["function",{"_index":31,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{}}}],["functions",{"_index":720,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gatt",{"_index":419,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["gattserverdisconnected",{"_index":429,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["getcharacteristic",{"_index":495,"title":{},"body":{"classes/FakeBluetoothRemoteGATTService.html":{}}}],["getcharacteristic(characteristic",{"_index":461,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["getdevice",{"_index":252,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["getdevicestatus",{"_index":211,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["getprimaryservice",{"_index":487,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{}}}],["getprimaryservice(service",{"_index":454,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["getting",{"_index":722,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":149,"title":{},"body":{"classes/AppPage.html":{}}}],["graph",{"_index":730,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":407,"title":{},"body":{"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["gyroscope",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hardware_rev",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["haserror",{"_index":212,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["haserror(error",{"_index":228,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["height",{"_index":598,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["host",{"_index":168,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["html",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["http://caniuse.com/#search=bluetooth",{"_index":357,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["humidity",{"_index":392,"title":{},"body":{"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"miscellaneous/variables.html":{}}}],["humidity'},{'name",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["humiditycomponent",{"_index":76,"title":{"components/HumidityComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["icon",{"_index":195,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["id",{"_index":420,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["identifier",{"_index":670,"title":{},"body":{"coverage.html":{}}}],["ieee11073",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image_block_request",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image_count",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image_notify",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image_status",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["img",{"_index":415,"title":{},"body":{"components/DashboardComponent.html":{}}}],["implements",{"_index":164,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["import",{"_index":16,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/PressureComponent.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{}}}],["imports",{"_index":39,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/AppModule.html":{},"modules/WebBluetoothModule.html":{}}}],["indeterminate",{"_index":286,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/AWBOptions.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/PressureComponent.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/PressureComponent.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{}}}],["initchart",{"_index":505,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["initialvalue",{"_index":467,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["injectable",{"_index":309,"title":{"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{}},"body":{"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"coverage.html":{}}}],["injectables",{"_index":310,"title":{},"body":{"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"overview.html":{}}}],["injectiontoken",{"_index":19,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["injectiontoken('awboptions",{"_index":38,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["instance",{"_index":265,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["integer",{"_index":645,"title":{},"body":{"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AWBOptions.html":{},"interfaces/Logger.html":{}},"body":{"interfaces/AWBOptions.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AWBOptions.html":{},"interfaces/Logger.html":{},"overview.html":{}}}],["interpolation",{"_index":538,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["io",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iot",{"_index":384,"title":{},"body":{"components/DashboardComponent.html":{}}}],["it/conventional",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["jest",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":171,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["key",{"_index":330,"title":{},"body":{"injectables/BleService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["keypress",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l",{"_index":259,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["labels",{"_index":545,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["layoutmodule",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["left",{"_index":193,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["legend",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["length",{"_index":535,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{}}}],["level",{"_index":167,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["level'},{'name",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["level.component",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["level.component.ts",{"_index":163,"title":{},"body":{"components/BatteryLevelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["level.component.ts:115",{"_index":234,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:123",{"_index":237,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:129",{"_index":225,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:135",{"_index":230,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:139",{"_index":232,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:66",{"_index":250,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:67",{"_index":245,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:68",{"_index":240,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:69",{"_index":251,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:70",{"_index":248,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:71",{"_index":243,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:73",{"_index":253,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:75",{"_index":223,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:78",{"_index":246,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:79",{"_index":247,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:80",{"_index":241,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:89",{"_index":233,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:99",{"_index":227,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["light",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["line",{"_index":333,"title":{},"body":{"injectables/BleService.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{}}}],["linewidth",{"_index":551,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["list",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["listener",{"_index":432,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["listener(mockedevent",{"_index":442,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["listeners",{"_index":421,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["literal",{"_index":489,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{},"components/StepCounterComponent.html":{},"miscellaneous/typealiases.html":{}}}],["log",{"_index":362,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["log(...args",{"_index":366,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["log(args",{"_index":371,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["logger",{"_index":370,"title":{"interfaces/Logger.html":{}},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"coverage.html":{}}}],["logger.service",{"_index":29,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["magnetometer",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["make",{"_index":262,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["makemetokeninjector",{"_index":37,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["manekinekko/angular",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["manifacturer",{"_index":775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map",{"_index":327,"title":{},"body":{"injectables/BleService.html":{}}}],["map(this._config.decoder",{"_index":339,"title":{},"body":{"injectables/BleService.html":{}}}],["margin",{"_index":400,"title":{},"body":{"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["mat",{"_index":190,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["matbuttonmodule",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":51,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/PressureComponent.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matexpansionmodule",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["matgridlistmodule",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodule",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodule",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":222,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["matsnackbarmodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":398,"title":{},"body":{"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{}}}],["metadata",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["methods",{"_index":148,"title":{},"body":{"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/PressureComponent.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{}}}],["miscellaneous",{"_index":719,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mocked",{"_index":589,"title":{},"body":{"injectables/ServerWebBluetooth.html":{}}}],["mockedevent",{"_index":438,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["mode",{"_index":205,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["model",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["model_number",{"_index":765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":88,"title":{"modules/AppModule.html":{},"modules/WebBluetoothModule.html":{}},"body":{}}],["modules",{"_index":90,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/WebBluetoothModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":18,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["more",{"_index":358,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{},"components/DashboardComponent.html":{}}}],["more_vert",{"_index":387,"title":{},"body":{"components/DashboardComponent.html":{}}}],["movement",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/functions.html":{}}}],["navigateto",{"_index":150,"title":{},"body":{"classes/AppPage.html":{}}}],["navigator.bluetooth",{"_index":351,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["new",{"_index":33,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"injectables/BrowserWebBluetooth.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":294,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["ngmodule",{"_index":17,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/AppModule.html":{},"modules/WebBluetoothModule.html":{}}}],["ngondestroy",{"_index":213,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["ngoninit",{"_index":214,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["nologgerservice",{"_index":28,"title":{"injectables/NoLoggerService.html":{}},"body":{"interfaces/AWBOptions.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{}}}],["now",{"_index":591,"title":{},"body":{"injectables/ServerWebBluetooth.html":{}}}],["null",{"_index":249,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["number",{"_index":236,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["oad",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":590,"title":{},"body":{"injectables/ServerWebBluetooth.html":{},"miscellaneous/variables.html":{}}}],["object.keys(titag).map(key",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["of(this.haserror.bind(this",{"_index":556,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{}}}],["ondestroy",{"_index":166,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["oninit",{"_index":165,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["optional",{"_index":11,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":35,"title":{},"body":{"interfaces/AWBOptions.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/functions.html":{}}}],["options.enabletracing",{"_index":36,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["out",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overview",{"_index":732,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":695,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":396,"title":{},"body":{"components/DashboardComponent.html":{}}}],["parameters",{"_index":224,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/functions.html":{}}}],["part2",{"_index":725,"title":{},"body":{"index.html":{}}}],["period",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe",{"_index":343,"title":{},"body":{"injectables/BleService.html":{}}}],["platform/browser",{"_index":26,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["pnp_id",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["position",{"_index":181,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["pressure",{"_index":394,"title":{},"body":{"components/DashboardComponent.html":{},"components/PressureComponent.html":{}}}],["pressure'},{'name",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["pressurecomponent",{"_index":78,"title":{"components/PressureComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["primary",{"_index":239,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["private",{"_index":312,"title":{},"body":{"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["production",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":191,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["project",{"_index":386,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["projects/.../bluetooth.module.ts",{"_index":721,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../bluetooth.service.ts",{"_index":742,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../ti",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/manekinekko/angular",{"_index":6,"title":{},"body":{"interfaces/AWBOptions.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":154,"title":{},"body":{"classes/AppPage.html":{},"injectables/BrowserWebBluetooth.html":{}}}],["promise.resolve(this",{"_index":453,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["promise.resolve(this.characteristics[characteristic",{"_index":463,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["promise.resolve(this.services[service].service",{"_index":456,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["promise.resolve(this.value",{"_index":473,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"properties.html":{}}}],["protractor",{"_index":156,"title":{},"body":{"classes/AppPage.html":{}}}],["provide",{"_index":45,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":331,"title":{},"body":{"injectables/BleService.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["providers",{"_index":44,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":202,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["raspberry/temp/temp.component",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["readonly",{"_index":466,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["readvalue",{"_index":472,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["readvalueoptions",{"_index":741,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["release",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["request_new_parameters",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestdevice",{"_index":346,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["requestdevice(options",{"_index":348,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["requestdeviceoptions",{"_index":349,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["requestvalue",{"_index":215,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["reset",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["results",{"_index":50,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/PressureComponent.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":32,"title":{},"body":{"interfaces/AWBOptions.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{}}}],["returns",{"_index":153,"title":{},"body":{"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/PressureComponent.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{}}}],["rgba(119,119,119,0.18",{"_index":543,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["rgba(255,161,161,0.30",{"_index":553,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["right",{"_index":412,"title":{},"body":{"components/DashboardComponent.html":{}}}],["root",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/BleService.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["root'},{'name",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["row",{"_index":174,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["rxjs",{"_index":254,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":328,"title":{},"body":{"injectables/BleService.html":{}}}],["section",{"_index":395,"title":{},"body":{"components/DashboardComponent.html":{}}}],["see",{"_index":356,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["selector",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["sensortag2.ts",{"_index":679,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serial_number",{"_index":767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["series",{"_index":504,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["serverwebbluetooth",{"_index":586,"title":{"injectables/ServerWebBluetooth.html":{}},"body":{"injectables/ServerWebBluetooth.html":{},"coverage.html":{}}}],["service",{"_index":206,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["service.config",{"_index":268,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["serviceoptions",{"_index":320,"title":{},"body":{"injectables/BleService.html":{},"miscellaneous/typealiases.html":{}}}],["services",{"_index":450,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["singleton",{"_index":264,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["size",{"_index":179,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/StepCounterComponent.html":{}}}],["smart",{"_index":355,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["smoothie",{"_index":528,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"dependencies.html":{}}}],["smoothiechart",{"_index":514,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["snackbar",{"_index":207,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["software_rev",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/PressureComponent.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{}}}],["span",{"_index":177,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/StepCounterComponent.html":{}}}],["span')).gettext",{"_index":160,"title":{},"body":{"classes/AppPage.html":{}}}],["spinner",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{}}}],["src/.../battery",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ble.service.ts",{"_index":743,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../environment.prod.ts",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../humidity.component.ts",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pressure.component.ts",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../stepcounter.component.ts",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../temp.component.ts",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../temperature.component.ts",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/ble.service.ts",{"_index":311,"title":{},"body":{"injectables/BleService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/ble.service.ts:17",{"_index":318,"title":{},"body":{"injectables/BleService.html":{}}}],["src/app/ble.service.ts:19",{"_index":326,"title":{},"body":{"injectables/BleService.html":{}}}],["src/app/ble.service.ts:21",{"_index":321,"title":{},"body":{"injectables/BleService.html":{}}}],["src/app/ble.service.ts:25",{"_index":323,"title":{},"body":{"injectables/BleService.html":{}}}],["src/app/ble.service.ts:29",{"_index":324,"title":{},"body":{"injectables/BleService.html":{}}}],["src/app/ble.service.ts:35",{"_index":325,"title":{},"body":{"injectables/BleService.html":{}}}],["src/app/ble.service.ts:46",{"_index":322,"title":{},"body":{"injectables/BleService.html":{}}}],["src/app/dashboard/dashboard.component.ts",{"_index":377,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard.component.ts:8",{"_index":383,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/raspberry/temp/temp.component.ts",{"_index":625,"title":{},"body":{"components/TempComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/raspberry/temp/temp.component.ts:102",{"_index":634,"title":{},"body":{"components/TempComponent.html":{}}}],["src/app/raspberry/temp/temp.component.ts:108",{"_index":628,"title":{},"body":{"components/TempComponent.html":{}}}],["src/app/raspberry/temp/temp.component.ts:115",{"_index":629,"title":{},"body":{"components/TempComponent.html":{}}}],["src/app/raspberry/temp/temp.component.ts:119",{"_index":631,"title":{},"body":{"components/TempComponent.html":{}}}],["src/app/raspberry/temp/temp.component.ts:38",{"_index":637,"title":{},"body":{"components/TempComponent.html":{}}}],["src/app/raspberry/temp/temp.component.ts:39",{"_index":635,"title":{},"body":{"components/TempComponent.html":{}}}],["src/app/raspberry/temp/temp.component.ts:40",{"_index":641,"title":{},"body":{"components/TempComponent.html":{}}}],["src/app/raspberry/temp/temp.component.ts:41",{"_index":640,"title":{},"body":{"components/TempComponent.html":{}}}],["src/app/raspberry/temp/temp.component.ts:44",{"_index":636,"title":{},"body":{"components/TempComponent.html":{}}}],["src/app/raspberry/temp/temp.component.ts:46",{"_index":642,"title":{},"body":{"components/TempComponent.html":{}}}],["src/app/raspberry/temp/temp.component.ts:48",{"_index":627,"title":{},"body":{"components/TempComponent.html":{}}}],["src/app/raspberry/temp/temp.component.ts:51",{"_index":638,"title":{},"body":{"components/TempComponent.html":{}}}],["src/app/raspberry/temp/temp.component.ts:52",{"_index":639,"title":{},"body":{"components/TempComponent.html":{}}}],["src/app/raspberry/temp/temp.component.ts:66",{"_index":632,"title":{},"body":{"components/TempComponent.html":{}}}],["src/app/raspberry/temp/temp.component.ts:76",{"_index":630,"title":{},"body":{"components/TempComponent.html":{}}}],["src/app/raspberry/temp/temp.component.ts:97",{"_index":633,"title":{},"body":{"components/TempComponent.html":{}}}],["src/app/thingy52/battery",{"_index":162,"title":{},"body":{"components/BatteryLevelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/thingy52/humidity.component.ts",{"_index":499,"title":{},"body":{"components/HumidityComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/thingy52/humidity.component.ts:104",{"_index":508,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:108",{"_index":510,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:38",{"_index":521,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:39",{"_index":515,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:40",{"_index":525,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:41",{"_index":524,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:44",{"_index":519,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:46",{"_index":526,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:48",{"_index":506,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:51",{"_index":522,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:52",{"_index":523,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:61",{"_index":511,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:71",{"_index":509,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:81",{"_index":512,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:90",{"_index":513,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:97",{"_index":507,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/pressure.component.ts",{"_index":568,"title":{},"body":{"components/PressureComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/thingy52/pressure.component.ts:104",{"_index":571,"title":{},"body":{"components/PressureComponent.html":{}}}],["src/app/thingy52/pressure.component.ts:108",{"_index":573,"title":{},"body":{"components/PressureComponent.html":{}}}],["src/app/thingy52/pressure.component.ts:38",{"_index":579,"title":{},"body":{"components/PressureComponent.html":{}}}],["src/app/thingy52/pressure.component.ts:39",{"_index":577,"title":{},"body":{"components/PressureComponent.html":{}}}],["src/app/thingy52/pressure.component.ts:40",{"_index":583,"title":{},"body":{"components/PressureComponent.html":{}}}],["src/app/thingy52/pressure.component.ts:41",{"_index":582,"title":{},"body":{"components/PressureComponent.html":{}}}],["src/app/thingy52/pressure.component.ts:44",{"_index":578,"title":{},"body":{"components/PressureComponent.html":{}}}],["src/app/thingy52/pressure.component.ts:46",{"_index":584,"title":{},"body":{"components/PressureComponent.html":{}}}],["src/app/thingy52/pressure.component.ts:48",{"_index":569,"title":{},"body":{"components/PressureComponent.html":{}}}],["src/app/thingy52/pressure.component.ts:51",{"_index":580,"title":{},"body":{"components/PressureComponent.html":{}}}],["src/app/thingy52/pressure.component.ts:52",{"_index":581,"title":{},"body":{"components/PressureComponent.html":{}}}],["src/app/thingy52/pressure.component.ts:61",{"_index":574,"title":{},"body":{"components/PressureComponent.html":{}}}],["src/app/thingy52/pressure.component.ts:71",{"_index":572,"title":{},"body":{"components/PressureComponent.html":{}}}],["src/app/thingy52/pressure.component.ts:81",{"_index":575,"title":{},"body":{"components/PressureComponent.html":{}}}],["src/app/thingy52/pressure.component.ts:90",{"_index":576,"title":{},"body":{"components/PressureComponent.html":{}}}],["src/app/thingy52/pressure.component.ts:97",{"_index":570,"title":{},"body":{"components/PressureComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts",{"_index":592,"title":{},"body":{"components/StepCounterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/thingy52/stepcounter.component.ts:101",{"_index":603,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:49",{"_index":611,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:50",{"_index":609,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:51",{"_index":610,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:53",{"_index":612,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:55",{"_index":600,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:58",{"_index":607,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:59",{"_index":608,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:74",{"_index":604,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:82",{"_index":605,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:87",{"_index":606,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:92",{"_index":601,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:97",{"_index":602,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/temperature.component.ts",{"_index":648,"title":{},"body":{"components/TemperatureComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/thingy52/temperature.component.ts:103",{"_index":656,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:109",{"_index":650,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:116",{"_index":651,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:120",{"_index":653,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:38",{"_index":659,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:39",{"_index":657,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:40",{"_index":663,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:41",{"_index":662,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:44",{"_index":658,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:46",{"_index":664,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:48",{"_index":649,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:51",{"_index":660,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:52",{"_index":661,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:67",{"_index":654,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:77",{"_index":652,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:98",{"_index":655,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":690,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":692,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":723,"title":{"index.html":{}},"body":{}}],["state",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":671,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":42,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"injectables/ServerWebBluetooth.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{}}}],["step",{"_index":539,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["stepcounter",{"_index":593,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["stepcounter'},{'name",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["stepcountercomponent",{"_index":80,"title":{"components/StepCounterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stepper",{"_index":393,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sticky",{"_index":404,"title":{},"body":{"components/DashboardComponent.html":{}}}],["stream",{"_index":316,"title":{},"body":{"injectables/BleService.html":{}}}],["streamsubscription",{"_index":208,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["string",{"_index":229,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["strokestyle",{"_index":542,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["styles",{"_index":161,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["styleurls",{"_index":379,"title":{},"body":{"components/DashboardComponent.html":{}}}],["subscribe",{"_index":293,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["subscribe((value",{"_index":278,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["subscribe(device",{"_index":282,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["subscription",{"_index":242,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["sup",{"_index":188,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["support",{"_index":354,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{},"modules.html":{}}}],["sure",{"_index":263,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["svg",{"_index":728,"title":{},"body":{"modules.html":{}}}],["system_id",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":694,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":693,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":439,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["temp",{"_index":626,"title":{},"body":{"components/TempComponent.html":{}}}],["temp'},{'name",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["tempcomponent",{"_index":82,"title":{"components/TempComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["temperature",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["temperaturecomponent",{"_index":84,"title":{"components/TemperatureComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["template",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["templateurl",{"_index":381,"title":{},"body":{"components/DashboardComponent.html":{}}}],["text",{"_index":175,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["thingy52/battery",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["thingy52/humidity.component",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["thingy52/pressure.component",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["thingy52/stepcounter.component",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["thingy52/temperature.component",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["this._config",{"_index":336,"title":{},"body":{"injectables/BleService.html":{}}}],["this._config.characteristic",{"_index":342,"title":{},"body":{"injectables/BleService.html":{}}}],["this._config.service",{"_index":341,"title":{},"body":{"injectables/BleService.html":{}}}],["this.ble",{"_index":340,"title":{},"body":{"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{}}}],["this.ble.disconnectdevice",{"_index":344,"title":{},"body":{"injectables/BleService.html":{}}}],["this.ble.getdevice",{"_index":337,"title":{},"body":{"injectables/BleService.html":{}}}],["this.ble.requestdevice(options",{"_index":360,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["this.ble.streamvalues$().pipe",{"_index":338,"title":{},"body":{"injectables/BleService.html":{}}}],["this.characteristics.service",{"_index":460,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.chart",{"_index":536,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.chart.addtimeseries(this.series",{"_index":550,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.chart.start",{"_index":559,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.chart.stop",{"_index":555,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.chart.streamto(canvas",{"_index":554,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.chartref.nativeelement",{"_index":534,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.color",{"_index":283,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.connected",{"_index":452,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.console.log('reading",{"_index":299,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.device.disconnect",{"_index":457,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.devicesubscription",{"_index":281,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.devicesubscription.unsubscribe",{"_index":302,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.devicesubscription?.unsubscribe",{"_index":307,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.getdevicestatus",{"_index":275,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.haserror(err",{"_index":298,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.haserror(error",{"_index":280,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.haserror.bind(this",{"_index":290,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.id",{"_index":444,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.initchart",{"_index":531,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.initialvalue",{"_index":471,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.listeners",{"_index":447,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.listeners.characteristicvaluechanged.foreach(listener",{"_index":475,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.listeners.gattserverdisconnected.foreach(listener",{"_index":441,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.listeners[type",{"_index":437,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.mode",{"_index":285,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.name",{"_index":446,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.properties",{"_index":470,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.series",{"_index":532,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.series.append(date.now",{"_index":558,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.series.clear",{"_index":560,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.service.disconnectdevice",{"_index":301,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.service.getdevice",{"_index":267,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.service.stream",{"_index":277,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.service.value",{"_index":292,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.snackbar.open(error",{"_index":304,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.streamsubscription",{"_index":276,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.streamsubscription.unsubscribe",{"_index":561,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.streamsubscription?.unsubscribe",{"_index":308,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.updatevalue(val",{"_index":296,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.updatevalue(value",{"_index":279,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.value",{"_index":287,"title":{},"body":{"components/BatteryLevelComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/StepCounterComponent.html":{}}}],["this.valuessubscription",{"_index":291,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.valuessubscription.unsubscribe",{"_index":303,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.valuessubscription?.unsubscribe",{"_index":306,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["throw",{"_index":352,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["ti_sensorag_services",{"_index":680,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":615,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["timeseries",{"_index":520,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["titag",{"_index":681,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["titag[key].service",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toolbar.mat",{"_index":403,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tooltip",{"_index":549,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["top",{"_index":183,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["tree",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["true",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":332,"title":{},"body":{"injectables/BleService.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":739,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/web",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":445,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["unknown",{"_index":440,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["updatevalue",{"_index":216,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["updatevalue(value",{"_index":235,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["usefactory",{"_index":46,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/variables.html":{}}}],["usevalue",{"_index":47,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["vadok",{"_index":727,"title":{},"body":{"index.html":{}}}],["val",{"_index":295,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["value",{"_index":198,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/variables.html":{}}}],["value.count",{"_index":624,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["value.getint16(0",{"_index":665,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["value.getint8(0",{"_index":271,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["value.getuint16(0",{"_index":529,"title":{},"body":{"components/HumidityComponent.html":{}}}],["value.getuint32(0",{"_index":614,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["value.getuint32(0,true",{"_index":585,"title":{},"body":{"components/PressureComponent.html":{}}}],["value.getuint32(4",{"_index":616,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["value.getuint8(1",{"_index":647,"title":{},"body":{"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["valuessubscription",{"_index":209,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["var",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["variable",{"_index":334,"title":{},"body":{"injectables/BleService.html":{},"coverage.html":{}}}],["variables",{"_index":744,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":737,"title":{},"body":{"properties.html":{}}}],["viewchild",{"_index":527,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["viewchild('chart",{"_index":518,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["void",{"_index":226,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/PressureComponent.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["warn",{"_index":284,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["warn(...args",{"_index":368,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["warn(args",{"_index":373,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["web",{"_index":7,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/PressureComponent.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["webbluetoothmodule",{"_index":41,"title":{"modules/WebBluetoothModule.html":{}},"body":{"interfaces/AWBOptions.html":{},"modules/AppModule.html":{},"modules/WebBluetoothModule.html":{},"modules.html":{},"overview.html":{}}}],["webbluetoothmodule.forroot",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["width",{"_index":185,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["window.smoothiechart",{"_index":537,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["window.timeseries",{"_index":533,"title":{},"body":{"components/HumidityComponent.html":{},"components/PressureComponent.html":{},"components/TempComponent.html":{},"components/TemperatureComponent.html":{}}}],["wot",{"_index":724,"title":{},"body":{"index.html":{}}}],["yes",{"_index":478,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["z",{"_index":405,"title":{},"body":{"components/DashboardComponent.html":{}}}],["zone.js",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AWBOptions.html":{"url":"interfaces/AWBOptions.html","title":"interface - AWBOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AWBOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            enableTracing\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enableTracing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enableTracing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NgModule, ModuleWithProviders, InjectionToken, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BluetoothCore } from './bluetooth.service';\nimport { BrowserWebBluetooth } from './platform/browser';\n\nimport { ConsoleLoggerService, NoLoggerService } from './logger.service';\n\nexport interface AWBOptions {\n  enableTracing?: boolean;\n}\n\nexport function browserWebBluetooth() {\n  return new BrowserWebBluetooth();\n}\n\nexport function consoleLoggerServiceConfig(options: AWBOptions) {\n  if (options && options.enableTracing) {\n    return new ConsoleLoggerService();\n  } else {\n    return new NoLoggerService();\n  }\n}\nexport function makeMeTokenInjector() {\n  return new InjectionToken('AWBOptions');\n}\n\n@NgModule({\n  imports: [CommonModule]\n})\nexport class WebBluetoothModule {\n  static forRoot(options: AWBOptions = {}): ModuleWithProviders {\n    return {\n      ngModule: WebBluetoothModule,\n      providers: [\n        BluetoothCore,\n        {\n          provide: BrowserWebBluetooth,\n          useFactory: browserWebBluetooth\n        },\n        {\n          provide: makeMeTokenInjector,\n          useValue: options\n        },\n        {\n          provide: ConsoleLoggerService,\n          useFactory: consoleLoggerServiceConfig,\n          deps: [makeMeTokenInjector]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ble-root\n            \n\n\n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ble-root',\n  template: `\n   \n  `\n})\nexport class AppComponent {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DashboardComponent', 'selector': 'ble-dashboard'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'PressureComponent', 'selector': 'ble-pressure'},{'name': 'StepCounterComponent', 'selector': 'ble-stepcounter'},{'name': 'TempComponent', 'selector': 'ble-temp'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBatteryLevelComponent\n\nBatteryLevelComponent\n\nAppModule -->\n\nBatteryLevelComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nHumidityComponent\n\nHumidityComponent\n\nAppModule -->\n\nHumidityComponent->AppModule\n\n\n\n\n\nPressureComponent\n\nPressureComponent\n\nAppModule -->\n\nPressureComponent->AppModule\n\n\n\n\n\nStepCounterComponent\n\nStepCounterComponent\n\nAppModule -->\n\nStepCounterComponent->AppModule\n\n\n\n\n\nTempComponent\n\nTempComponent\n\nAppModule -->\n\nTempComponent->AppModule\n\n\n\n\n\nTemperatureComponent\n\nTemperatureComponent\n\nAppModule -->\n\nTemperatureComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nWebBluetoothModule\n\nWebBluetoothModule\n\nAppModule -->\n\nWebBluetoothModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            BatteryLevelComponent\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            HumidityComponent\n                        \n                        \n                            PressureComponent\n                        \n                        \n                            StepCounterComponent\n                        \n                        \n                            TempComponent\n                        \n                        \n                            TemperatureComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            WebBluetoothModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { LayoutModule } from '@angular/cdk/layout';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\nimport { WebBluetoothModule } from '@manekinekko/angular-web-bluetooth';\nimport { AppComponent } from './app.component';\nimport { BatteryLevelComponent } from './thingy52/battery-level.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HumidityComponent } from './thingy52/humidity.component';\nimport { StepCounterComponent } from './thingy52/stepcounter.component';\nimport { TemperatureComponent } from './thingy52/temperature.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { TempComponent } from './raspberry/temp/temp.component';\nimport { PressureComponent } from './thingy52/pressure.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BatteryLevelComponent,\n    TemperatureComponent,\n    HumidityComponent,\n    PressureComponent,\n    StepCounterComponent,\n    DashboardComponent,\n    TempComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    WebBluetoothModule.forRoot({\n      enableTracing: true\n    }),\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    MatExpansionModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTitleText\n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise<>\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BatteryLevelComponent.html":{"url":"components/BatteryLevelComponent.html","title":"component - BatteryLevelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BatteryLevelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/thingy52/battery-level.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                PROVIDERS\n                \n            \n\n\n            \n                selector\n                ble-battery-level\n            \n\n\n            \n                styles\n                \n  :host {\n    display: flex;\n    justify-content: center;\n    flex-direction: row;\n    text-align: center;\n  }\n  span {\n    font-size: 5em;\n    position: absolute;\n    top: 222px;\n    width: 120px;\n    display: block;\n    text-align: center;\n  }\n  sup {\n    font-size: 24px;\n  }\n  mat-progress-spinner {\n    top: 90px;\n    left: 5px;\n  }\n  mat-icon {\n    position: absolute;\n    bottom: 255px;\n  }\n  \n            \n\n            \n                template\n                {{ value || \"000\" }}%\n\n\nbattery_charging_full\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                    Public\n                                console\n                            \n                            \n                                deviceSubscription\n                            \n                            \n                                mode\n                            \n                            \n                                    Public\n                                service\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                streamSubscription\n                            \n                            \n                                value\n                            \n                            \n                                valuesSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnect\n                            \n                            \n                                getDeviceStatus\n                            \n                            \n                                hasError\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                requestValue\n                            \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    device\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: BleService, snackBar: MatSnackBar, console: ConsoleLoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/thingy52/battery-level.component.ts:75\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        BleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        console\n                                                  \n                                                        \n                                                                        ConsoleLoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/battery-level.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeviceStatus\n                        \n                    \n                \n            \n            \n                \ngetDeviceStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/battery-level.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n            \n                \nhasError(error: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/battery-level.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/battery-level.component.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/battery-level.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestValue\n                        \n                    \n                \n            \n            \n                \nrequestValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/battery-level.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateValue\n                        \n                    \n                \n            \n            \n                \nupdateValue(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/battery-level.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/battery-level.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        console\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConsoleLoggerService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/battery-level.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/battery-level.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'determinate'\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/battery-level.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BleService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/battery-level.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/battery-level.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        streamSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/battery-level.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/battery-level.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valuesSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/battery-level.component.ts:69\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        device\n                    \n                \n\n                \n                    \n                        getdevice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/thingy52/battery-level.component.ts:73\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BluetoothCore, BrowserWebBluetooth, ConsoleLoggerService } from '@manekinekko/angular-web-bluetooth';\nimport { Subscription } from 'rxjs';\nimport { BleService } from '../ble.service';\n\nexport const bleCore = (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l);\nexport const bleService = (b: BluetoothCore) => new BleService(b);\n\n\n// make sure we get a singleton instance of each service\nconst PROVIDERS = [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}];\n\n\n@Component({\n  selector: 'ble-battery-level',\n  template: `\n    {{ value || \"000\" }}%\n    \n    \n    battery_charging_full\n  `,\n  styles: [`\n  :host {\n    display: flex;\n    justify-content: center;\n    flex-direction: row;\n    text-align: center;\n  }\n  span {\n    font-size: 5em;\n    position: absolute;\n    top: 222px;\n    width: 120px;\n    display: block;\n    text-align: center;\n  }\n  sup {\n    font-size: 24px;\n  }\n  mat-progress-spinner {\n    top: 90px;\n    left: 5px;\n  }\n  mat-icon {\n    position: absolute;\n    bottom: 255px;\n  }\n  `],\n  providers: PROVIDERS\n})\nexport class BatteryLevelComponent implements OnInit, OnDestroy {\n  value = null;\n  mode = 'determinate';\n  color = 'primary';\n  valuesSubscription: Subscription;\n  streamSubscription: Subscription;\n  deviceSubscription: Subscription;\n\n  get device() {\n    return this.service.getDevice();\n  }\n\n  constructor(\n    public service: BleService,\n    public snackBar: MatSnackBar,\n    public console: ConsoleLoggerService) {\n\n    service.config({\n      decoder: (value: DataView) => value.getInt8(0),\n      service: 'battery_service',\n      characteristic: 'battery_level'\n    });\n  }\n\n  ngOnInit() {\n    this.getDeviceStatus();\n\n    this.streamSubscription = this.service.stream()\n      .subscribe((value: number) => {\n        this.updateValue(value);\n      }, error => this.hasError(error));\n\n  }\n\n  getDeviceStatus() {\n    this.deviceSubscription = this.service.getDevice()\n      .subscribe(device => {\n        if (device) {\n          this.color = 'warn';\n          this.mode = 'indeterminate';\n          this.value = null;\n        } else {\n          // device not connected or disconnected\n          this.value = null;\n          this.mode = 'determinate';\n          this.color = 'primary';\n        }\n      }, this.hasError.bind(this));\n  }\n\n  requestValue() {\n    this.valuesSubscription = this.service.value()\n      .subscribe({\n        next: (val: number) => this.updateValue(val),\n        error: (err) => this.hasError(err)\n      });\n  }\n\n  updateValue(value: number) {\n    this.console.log('Reading battery level %d', value);\n    this.value = value;\n    this.mode = 'determinate';\n  }\n\n  disconnect() {\n    this.service.disconnectDevice();\n    this.deviceSubscription.unsubscribe();\n    this.valuesSubscription.unsubscribe();\n  }\n\n  hasError(error: string) {\n    this.snackBar.open(error, 'Close');\n  }\n\n  ngOnDestroy() {\n    this.valuesSubscription?.unsubscribe();\n    this.deviceSubscription?.unsubscribe();\n    this.streamSubscription?.unsubscribe();\n  }\n}\n\n\n    \n\n\n    \n            \n  :host {\n    display: flex;\n    justify-content: center;\n    flex-direction: row;\n    text-align: center;\n  }\n  span {\n    font-size: 5em;\n    position: absolute;\n    top: 222px;\n    width: 120px;\n    display: block;\n    text-align: center;\n  }\n  sup {\n    font-size: 24px;\n  }\n  mat-progress-spinner {\n    top: 90px;\n    left: 5px;\n  }\n  mat-icon {\n    position: absolute;\n    bottom: 255px;\n  }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ value || \"000\" }}%battery_charging_full'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DashboardComponent', 'selector': 'ble-dashboard'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'PressureComponent', 'selector': 'ble-pressure'},{'name': 'StepCounterComponent', 'selector': 'ble-stepcounter'},{'name': 'TempComponent', 'selector': 'ble-temp'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BatteryLevelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BleService.html":{"url":"injectables/BleService.html","title":"injectable - BleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ble.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _config\n                            \n                            \n                                    Public\n                                ble\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                disconnectDevice\n                            \n                            \n                                getDevice\n                            \n                            \n                                stream\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ble: BluetoothCore)\n                    \n                \n                        \n                            \n                                Defined in src/app/ble.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ble\n                                                  \n                                                        \n                                                                        BluetoothCore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n            \n                \nconfig(options: ServiceOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ble.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ServiceOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectDevice\n                        \n                    \n                \n            \n            \n                \ndisconnectDevice()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ble.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDevice\n                        \n                    \n                \n            \n            \n                \ngetDevice()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ble.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stream\n                        \n                    \n                \n            \n            \n                \nstream()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ble.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n            \n                \nvalue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ble.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ServiceOptions\n\n                    \n                \n                    \n                        \n                                Defined in src/app/ble.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ble\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BluetoothCore\n\n                    \n                \n                    \n                        \n                                Defined in src/app/ble.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BluetoothCore } from '@manekinekko/angular-web-bluetooth';\nimport { map } from 'rxjs/operators';\n\ntype ServiceOptions = {\n    characteristic: string;\n    service: string,\n    decoder(value: DataView): number | {[key: string]: number}\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BleService {\n\n    // tslint:disable-next-line: variable-name\n    private _config: ServiceOptions;\n\n  constructor(public ble: BluetoothCore) {}\n\n  config(options: ServiceOptions) {\n    this._config = options;\n  }\n\n  getDevice() {\n    return this.ble.getDevice$();\n  }\n\n  stream() {\n    return this.ble.streamValues$().pipe(\n      map(this._config.decoder)\n    );\n  }\n\n  value() {\n    return this.ble\n      .value$({\n        service: this._config.service,\n        characteristic: this._config.characteristic\n      })\n      .pipe(\n        map(this._config.decoder)\n      );\n  }\n\n  disconnectDevice() {\n    this.ble.disconnectDevice();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BrowserWebBluetooth.html":{"url":"injectables/BrowserWebBluetooth.html","title":"injectable - BrowserWebBluetooth","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BrowserWebBluetooth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/platform/browser.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                ble\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                requestDevice\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/platform/browser.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        requestDevice\n                        \n                    \n                \n            \n            \n                \nrequestDevice(options: RequestDeviceOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/platform/browser.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            RequestDeviceOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ble\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/platform/browser.ts:5\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class BrowserWebBluetooth {\n  private ble;\n\n  constructor() {\n    this.ble = navigator.bluetooth;\n    if (!this.ble) {\n      throw new Error('Your browser does not support Smart Bluetooth. See http://caniuse.com/#search=Bluetooth for more details.');\n    }\n  }\n\n  requestDevice(options: RequestDeviceOptions): Promise {\n    return this.ble.requestDevice(options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleLoggerService.html":{"url":"injectables/ConsoleLoggerService.html","title":"injectable - ConsoleLoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleLoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Logger {\n  log(args: string[]): void;\n  error(args: string[]): void;\n  warn(args: string[]): void;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsoleLoggerService implements Logger {\n  log(...args) {\n    console.log.apply(console, args);\n  }\n  error(...args) {\n    console.error.apply(console, args);\n  }\n  warn(...args) {\n    console.warn.apply(console, args);\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoLoggerService implements Logger {\n  log(...args) {}\n  error(...args) {}\n  warn(...args) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ble-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/dashboard.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ble-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent {\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n  IOT Boiler Project\n\n\n\n  \n\n    \n\n    \n      \n        \n          \n            Battery Level\n            \n              more_vert\n            \n            \n              \n                bluetooth_searching\n                Connect\n              \n              \n                bluetooth_disabled\n                Disconnect\n              \n            \n          \n          \n            {{ device.name }}\n          \n        \n        \n          \n        \n      \n     -->\n\n    \n\n    \n      \n        \n          \n            Humidity Level\n            \n              more_vert\n            \n            \n              \n                bluetooth_searching\n                Connect\n              \n              \n                bluetooth_disabled\n                Disconnect\n              \n            \n          \n          \n            {{ device.name }}\n          \n        \n        \n          \n        \n      \n    \n\n    \n\n    \n      \n        \n          \n            Temperature\n            \n              more_vert\n            \n            \n              \n                bluetooth_searching\n                Connect\n              \n              \n                bluetooth_disabled\n                Disconnect\n              \n            \n          \n          \n            {{ device.name }}\n          \n        \n        \n          \n        \n      \n    \n\n    \n\n    \n      \n        \n          \n            Stepper\n            \n              more_vert\n            \n            \n              \n                bluetooth_searching\n                Connect\n              \n              \n                bluetooth_disabled\n                Disconnect\n              \n            \n          \n          \n            {{ device.name }}\n          \n        \n        \n          \n        \n      \n     -->\n\n    \n\n    \n      \n        \n          \n            Pressure Level\n            \n              more_vert\n            \n            \n              \n                bluetooth_searching\n                Connect\n              \n              \n                bluetooth_disabled\n                Disconnect\n              \n            \n          \n          \n            {{ device.name }}\n          \n        \n        \n          \n        \n      \n    \n\n  \n\n\n    \n\n    \n                \n                    ./dashboard.component.css\n                \n                section {\n  padding: 40px;\n  max-width: 700px;\n  margin: 0 auto;\n}\n\n.mat-toolbar.mat-primary {\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\n\n.grid-container {\n  margin: 20px;\n}\n\n.dashboard-card {\n  position: absolute;\n  top: 15px;\n  left: 15px;\n  right: 15px;\n  bottom: 15px;\n}\n\n.more-button {\n  position: absolute;\n  top: 5px;\n  right: 10px;\n}\n\n.dashboard-card-content {\n  text-align: center;\n}\n\n\nimg {\n  width: 32px;\n  margin: 0 10px;\n}\n\n.mat-icon {\n  margin: 0 10px 0 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    IOT Boiler Project                                              Battery Level                          more_vert                                                      bluetooth_searching                Connect                                            bluetooth_disabled                Disconnect                                                          {{ device.name }}                                                       -->                                            Humidity Level                          more_vert                                                      bluetooth_searching                Connect                                            bluetooth_disabled                Disconnect                                                          {{ device.name }}                                                                                                  Temperature                          more_vert                                                      bluetooth_searching                Connect                                            bluetooth_disabled                Disconnect                                                          {{ device.name }}                                                                                                  Stepper                          more_vert                                                      bluetooth_searching                Connect                                            bluetooth_disabled                Disconnect                                                          {{ device.name }}                                                       -->                                            Pressure Level                          more_vert                                                      bluetooth_searching                Connect                                            bluetooth_disabled                Disconnect                                                          {{ device.name }}                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DashboardComponent', 'selector': 'ble-dashboard'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'PressureComponent', 'selector': 'ble-pressure'},{'name': 'StepCounterComponent', 'selector': 'ble-stepcounter'},{'name': 'TempComponent', 'selector': 'ble-temp'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FakeBluetoothDevice.html":{"url":"classes/FakeBluetoothDevice.html","title":"class - FakeBluetoothDevice","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FakeBluetoothDevice\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gatt\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Private\n                                listeners\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEventListener\n                            \n                            \n                                clear\n                            \n                            \n                                disconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, name: string)\n                    \n                \n                        \n                            \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gatt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BluetoothRemoteGATTServer\n\n                    \n                \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        listeners\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n    gattserverdisconnected: []\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEventListener\n                        \n                    \n                \n            \n            \n                \naddEventListener(type: string, listener: EventListener)\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listener\n                                    \n                                            EventListener\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class FakeBluetoothDevice {\n  gatt: BluetoothRemoteGATTServer;\n  private listeners: {\n    [key in 'gattserverdisconnected']: EventListener[]\n  } = {\n    gattserverdisconnected: []\n  };\n\n  constructor(public id: string, public name: string) {\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  disconnect() {\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.gattserverdisconnected.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.id = undefined;\n    this.name = undefined;\n    this.listeners = {\n      gattserverdisconnected: []\n    };\n  }\n}\n\nexport class FakeBluetoothRemoteGATTServer {\n  connected = false;\n\n  constructor(public device, public services: { [key: string]: { service, primary: boolean } }) {\n    device.gatt = this;\n  }\n\n  connect() {\n    this.connected = true;\n    return Promise.resolve(this);\n  }\n\n  getPrimaryService(service: BluetoothServiceUUID) {\n    return Promise.resolve(this.services[service].service);\n  }\n\n  disconnect() {\n    this.device.disconnect();\n    this.connected = false;\n  }\n}\n\nexport class FakeBluetoothRemoteGATTService {\n  constructor(public device, public characteristics) {\n    this.characteristics.service = this;\n  }\n\n  getCharacteristic(characteristic: BluetoothCharacteristicUUID) {\n    return Promise.resolve(this.characteristics[characteristic]);\n  }\n}\n\nexport class FakeBluetoothRemoteGATTCharacteristic {\n  value: DataView;\n  properties: BluetoothCharacteristicProperties;\n  private readonly initialValue: DataView;\n  private listeners: {\n    [key in 'characteristicvaluechanged']: EventListener[]\n  } = {\n    characteristicvaluechanged: []\n  };\n\n  constructor(properties: BluetoothCharacteristicProperties, initialValue?: DataView) {\n    this.properties = properties;\n    this.value = initialValue;\n    this.initialValue = initialValue;\n  }\n\n  readValue() {\n    return Promise.resolve(this.value);\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  changeValue(value: DataView) {\n    this.value = value;\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.characteristicvaluechanged.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.value = this.initialValue;\n    this.listeners = {\n      characteristicvaluechanged: []\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{"url":"classes/FakeBluetoothRemoteGATTCharacteristic.html","title":"class - FakeBluetoothRemoteGATTCharacteristic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FakeBluetoothRemoteGATTCharacteristic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                initialValue\n                            \n                            \n                                    Private\n                                listeners\n                            \n                            \n                                properties\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEventListener\n                            \n                            \n                                changeValue\n                            \n                            \n                                clear\n                            \n                            \n                                readValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(properties: BluetoothCharacteristicProperties, initialValue?: DataView)\n                    \n                \n                        \n                            \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:78\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                    BluetoothCharacteristicProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        initialValue\n                                                  \n                                                        \n                                                                    DataView\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        initialValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DataView\n\n                    \n                \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        listeners\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n    characteristicvaluechanged: []\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BluetoothCharacteristicProperties\n\n                    \n                \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DataView\n\n                    \n                \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:71\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEventListener\n                        \n                    \n                \n            \n            \n                \naddEventListener(type: string, listener: EventListener)\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listener\n                                    \n                                            EventListener\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeValue\n                        \n                    \n                \n            \n            \n                \nchangeValue(value: DataView)\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            DataView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readValue\n                        \n                    \n                \n            \n            \n                \nreadValue()\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class FakeBluetoothDevice {\n  gatt: BluetoothRemoteGATTServer;\n  private listeners: {\n    [key in 'gattserverdisconnected']: EventListener[]\n  } = {\n    gattserverdisconnected: []\n  };\n\n  constructor(public id: string, public name: string) {\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  disconnect() {\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.gattserverdisconnected.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.id = undefined;\n    this.name = undefined;\n    this.listeners = {\n      gattserverdisconnected: []\n    };\n  }\n}\n\nexport class FakeBluetoothRemoteGATTServer {\n  connected = false;\n\n  constructor(public device, public services: { [key: string]: { service, primary: boolean } }) {\n    device.gatt = this;\n  }\n\n  connect() {\n    this.connected = true;\n    return Promise.resolve(this);\n  }\n\n  getPrimaryService(service: BluetoothServiceUUID) {\n    return Promise.resolve(this.services[service].service);\n  }\n\n  disconnect() {\n    this.device.disconnect();\n    this.connected = false;\n  }\n}\n\nexport class FakeBluetoothRemoteGATTService {\n  constructor(public device, public characteristics) {\n    this.characteristics.service = this;\n  }\n\n  getCharacteristic(characteristic: BluetoothCharacteristicUUID) {\n    return Promise.resolve(this.characteristics[characteristic]);\n  }\n}\n\nexport class FakeBluetoothRemoteGATTCharacteristic {\n  value: DataView;\n  properties: BluetoothCharacteristicProperties;\n  private readonly initialValue: DataView;\n  private listeners: {\n    [key in 'characteristicvaluechanged']: EventListener[]\n  } = {\n    characteristicvaluechanged: []\n  };\n\n  constructor(properties: BluetoothCharacteristicProperties, initialValue?: DataView) {\n    this.properties = properties;\n    this.value = initialValue;\n    this.initialValue = initialValue;\n  }\n\n  readValue() {\n    return Promise.resolve(this.value);\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  changeValue(value: DataView) {\n    this.value = value;\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.characteristicvaluechanged.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.value = this.initialValue;\n    this.listeners = {\n      characteristicvaluechanged: []\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FakeBluetoothRemoteGATTServer.html":{"url":"classes/FakeBluetoothRemoteGATTServer.html","title":"class - FakeBluetoothRemoteGATTServer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FakeBluetoothRemoteGATTServer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                connected\n                            \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                services\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                disconnect\n                            \n                            \n                                getPrimaryService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(device, services: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        device\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        services\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        connected\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        device\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        services\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:41\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connect\n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPrimaryService\n                        \n                    \n                \n            \n            \n                \ngetPrimaryService(service: BluetoothServiceUUID)\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    service\n                                    \n                                            BluetoothServiceUUID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class FakeBluetoothDevice {\n  gatt: BluetoothRemoteGATTServer;\n  private listeners: {\n    [key in 'gattserverdisconnected']: EventListener[]\n  } = {\n    gattserverdisconnected: []\n  };\n\n  constructor(public id: string, public name: string) {\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  disconnect() {\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.gattserverdisconnected.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.id = undefined;\n    this.name = undefined;\n    this.listeners = {\n      gattserverdisconnected: []\n    };\n  }\n}\n\nexport class FakeBluetoothRemoteGATTServer {\n  connected = false;\n\n  constructor(public device, public services: { [key: string]: { service, primary: boolean } }) {\n    device.gatt = this;\n  }\n\n  connect() {\n    this.connected = true;\n    return Promise.resolve(this);\n  }\n\n  getPrimaryService(service: BluetoothServiceUUID) {\n    return Promise.resolve(this.services[service].service);\n  }\n\n  disconnect() {\n    this.device.disconnect();\n    this.connected = false;\n  }\n}\n\nexport class FakeBluetoothRemoteGATTService {\n  constructor(public device, public characteristics) {\n    this.characteristics.service = this;\n  }\n\n  getCharacteristic(characteristic: BluetoothCharacteristicUUID) {\n    return Promise.resolve(this.characteristics[characteristic]);\n  }\n}\n\nexport class FakeBluetoothRemoteGATTCharacteristic {\n  value: DataView;\n  properties: BluetoothCharacteristicProperties;\n  private readonly initialValue: DataView;\n  private listeners: {\n    [key in 'characteristicvaluechanged']: EventListener[]\n  } = {\n    characteristicvaluechanged: []\n  };\n\n  constructor(properties: BluetoothCharacteristicProperties, initialValue?: DataView) {\n    this.properties = properties;\n    this.value = initialValue;\n    this.initialValue = initialValue;\n  }\n\n  readValue() {\n    return Promise.resolve(this.value);\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  changeValue(value: DataView) {\n    this.value = value;\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.characteristicvaluechanged.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.value = this.initialValue;\n    this.listeners = {\n      characteristicvaluechanged: []\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FakeBluetoothRemoteGATTService.html":{"url":"classes/FakeBluetoothRemoteGATTService.html","title":"class - FakeBluetoothRemoteGATTService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FakeBluetoothRemoteGATTService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                characteristics\n                            \n                            \n                                    Public\n                                device\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCharacteristic\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(device, characteristics)\n                    \n                \n                        \n                            \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        device\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        characteristics\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        characteristics\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        device\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:61\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCharacteristic\n                        \n                    \n                \n            \n            \n                \ngetCharacteristic(characteristic: BluetoothCharacteristicUUID)\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    characteristic\n                                    \n                                            BluetoothCharacteristicUUID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class FakeBluetoothDevice {\n  gatt: BluetoothRemoteGATTServer;\n  private listeners: {\n    [key in 'gattserverdisconnected']: EventListener[]\n  } = {\n    gattserverdisconnected: []\n  };\n\n  constructor(public id: string, public name: string) {\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  disconnect() {\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.gattserverdisconnected.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.id = undefined;\n    this.name = undefined;\n    this.listeners = {\n      gattserverdisconnected: []\n    };\n  }\n}\n\nexport class FakeBluetoothRemoteGATTServer {\n  connected = false;\n\n  constructor(public device, public services: { [key: string]: { service, primary: boolean } }) {\n    device.gatt = this;\n  }\n\n  connect() {\n    this.connected = true;\n    return Promise.resolve(this);\n  }\n\n  getPrimaryService(service: BluetoothServiceUUID) {\n    return Promise.resolve(this.services[service].service);\n  }\n\n  disconnect() {\n    this.device.disconnect();\n    this.connected = false;\n  }\n}\n\nexport class FakeBluetoothRemoteGATTService {\n  constructor(public device, public characteristics) {\n    this.characteristics.service = this;\n  }\n\n  getCharacteristic(characteristic: BluetoothCharacteristicUUID) {\n    return Promise.resolve(this.characteristics[characteristic]);\n  }\n}\n\nexport class FakeBluetoothRemoteGATTCharacteristic {\n  value: DataView;\n  properties: BluetoothCharacteristicProperties;\n  private readonly initialValue: DataView;\n  private listeners: {\n    [key in 'characteristicvaluechanged']: EventListener[]\n  } = {\n    characteristicvaluechanged: []\n  };\n\n  constructor(properties: BluetoothCharacteristicProperties, initialValue?: DataView) {\n    this.properties = properties;\n    this.value = initialValue;\n    this.initialValue = initialValue;\n  }\n\n  readValue() {\n    return Promise.resolve(this.value);\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  changeValue(value: DataView) {\n    this.value = value;\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.characteristicvaluechanged.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.value = this.initialValue;\n    this.listeners = {\n      characteristicvaluechanged: []\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HumidityComponent.html":{"url":"components/HumidityComponent.html","title":"component - HumidityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HumidityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/thingy52/humidity.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                PROVIDERS\n                \n            \n\n\n            \n                selector\n                ble-humidity\n            \n\n\n            \n                styles\n                \n  :host {\n    display: block;\n  }\n  canvas {\n    margin-left: -16px;\n  }\n            \n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chart\n                            \n                            \n                                chartRef\n                            \n                            \n                                series\n                            \n                            \n                                    Public\n                                service\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                streamSubscription\n                            \n                            \n                                valuesSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnect\n                            \n                            \n                                hasError\n                            \n                            \n                                initChart\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                requestValue\n                            \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    device\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: BleService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/thingy52/humidity.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        BleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/humidity.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n            \n                \nhasError(error: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/humidity.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initChart\n                        \n                    \n                \n            \n            \n                \ninitChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/humidity.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/humidity.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/humidity.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestValue\n                        \n                    \n                \n            \n            \n                \nrequestValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/humidity.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateValue\n                        \n                    \n                \n            \n            \n                \nupdateValue(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/humidity.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SmoothieChart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/humidity.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('chart', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/humidity.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        series\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TimeSeries\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/humidity.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BleService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/humidity.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/humidity.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        streamSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/humidity.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valuesSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/humidity.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        device\n                    \n                \n\n                \n                    \n                        getdevice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/thingy52/humidity.component.ts:46\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BluetoothCore, BrowserWebBluetooth, ConsoleLoggerService } from '@manekinekko/angular-web-bluetooth';\nimport { of, Subscription } from 'rxjs';\nimport { SmoothieChart, TimeSeries } from 'smoothie';\nimport { BleService } from '../ble.service';\n\nexport const bleCore = (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l);\nexport const bleService = (b: BluetoothCore) => new BleService(b);\n\n\n// make sure we get a singleton instance of each service\nconst PROVIDERS = [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}];\n\n@Component({\n  selector: 'ble-humidity',\n  template: `\n    \n  `,\n  styles: [`\n  :host {\n    display: block;\n  }\n  canvas {\n    margin-left: -16px;\n  }`],\n  providers: PROVIDERS\n})\nexport class HumidityComponent implements OnInit, OnDestroy {\n  series: TimeSeries;\n  chart: SmoothieChart;\n  valuesSubscription: Subscription;\n  streamSubscription: Subscription;\n\n  @ViewChild('chart', { static: true })\n  chartRef: ElementRef;\n\n  get device() {\n    return this.service.getDevice();\n  }\n\n  constructor(\n    public service: BleService,\n    public snackBar: MatSnackBar) {\n\n    service.config({\n      decoder: (value: DataView) => value.getUint16(0, true),\n      characteristic: 'humidity',\n      service: 'environmental_sensing',\n    });\n  }\n\n  ngOnInit() {\n    this.initChart();\n\n    this.streamSubscription = this.service.stream()\n      .subscribe({\n        next: (val: number) => this.updateValue(val),\n        error: (err) => this.hasError(err)\n      });\n  }\n\n  initChart() {\n    this.series = new window.TimeSeries() as TimeSeries;\n    const canvas = this.chartRef.nativeElement;\n    // tslint:disable-next-line: max-line-length\n    this.chart = new window.SmoothieChart({ interpolation: 'step', grid: { fillStyle: '#ffffff', strokeStyle: 'rgba(119,119,119,0.18)', borderVisible: false }, labels: { fillStyle: '#000000', fontSize: 17 }, tooltip: true });\n    this.chart.addTimeSeries(this.series, { lineWidth: 1, strokeStyle: '#ff0000', fillStyle: 'rgba(255,161,161,0.30)' });\n    this.chart.streamTo(canvas);\n    this.chart.stop();\n  }\n\n  requestValue() {\n    this.valuesSubscription = this.service.value()\n      .subscribe(\n        () => null,\n        () => of(this.hasError.bind(this)),\n      );\n  }\n\n\n  updateValue(value: number) {\n    console.log('Reading humidity %d', value);\n    this.series.append(Date.now(), value);\n    this.chart.start();\n  }\n\n\n  disconnect() {\n    this.service.disconnectDevice();\n    this.series.clear();\n    this.chart.stop();\n    this.valuesSubscription.unsubscribe();\n  }\n\n  hasError(error: string) {\n    this.snackBar.open(error, 'Close');\n  }\n\n  ngOnDestroy() {\n    this.valuesSubscription.unsubscribe();\n    this.streamSubscription.unsubscribe();\n  }\n}\n\n    \n\n\n    \n            \n  :host {\n    display: block;\n  }\n  canvas {\n    margin-left: -16px;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DashboardComponent', 'selector': 'ble-dashboard'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'PressureComponent', 'selector': 'ble-pressure'},{'name': 'StepCounterComponent', 'selector': 'ble-stepcounter'},{'name': 'TempComponent', 'selector': 'ble-temp'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HumidityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Logger.html":{"url":"interfaces/Logger.html","title":"interface - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        error\n                                    \n                                \n                                \n                                    \n                                        log\n                                    \n                                \n                                \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(args: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(args: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(args: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Logger {\n  log(args: string[]): void;\n  error(args: string[]): void;\n  warn(args: string[]): void;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsoleLoggerService implements Logger {\n  log(...args) {\n    console.log.apply(console, args);\n  }\n  error(...args) {\n    console.error.apply(console, args);\n  }\n  warn(...args) {\n    console.warn.apply(console, args);\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoLoggerService implements Logger {\n  log(...args) {}\n  error(...args) {}\n  warn(...args) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoLoggerService.html":{"url":"injectables/NoLoggerService.html","title":"injectable - NoLoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NoLoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Logger {\n  log(args: string[]): void;\n  error(args: string[]): void;\n  warn(args: string[]): void;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsoleLoggerService implements Logger {\n  log(...args) {\n    console.log.apply(console, args);\n  }\n  error(...args) {\n    console.error.apply(console, args);\n  }\n  warn(...args) {\n    console.warn.apply(console, args);\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoLoggerService implements Logger {\n  log(...args) {}\n  error(...args) {}\n  warn(...args) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PressureComponent.html":{"url":"components/PressureComponent.html","title":"component - PressureComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PressureComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/thingy52/pressure.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                PROVIDERS\n                \n            \n\n\n            \n                selector\n                ble-pressure\n            \n\n\n            \n                styles\n                \n  :host {\n    display: block;\n  }\n  canvas {\n    margin-left: -16px;\n  }\n            \n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chart\n                            \n                            \n                                chartRef\n                            \n                            \n                                series\n                            \n                            \n                                    Public\n                                service\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                streamSubscription\n                            \n                            \n                                valuesSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnect\n                            \n                            \n                                hasError\n                            \n                            \n                                initChart\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                requestValue\n                            \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    device\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: BleService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/thingy52/pressure.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        BleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/pressure.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n            \n                \nhasError(error: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/pressure.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initChart\n                        \n                    \n                \n            \n            \n                \ninitChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/pressure.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/pressure.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/pressure.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestValue\n                        \n                    \n                \n            \n            \n                \nrequestValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/pressure.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateValue\n                        \n                    \n                \n            \n            \n                \nupdateValue(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/pressure.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SmoothieChart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/pressure.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('chart', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/pressure.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        series\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TimeSeries\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/pressure.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BleService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/pressure.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/pressure.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        streamSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/pressure.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valuesSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/pressure.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        device\n                    \n                \n\n                \n                    \n                        getdevice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/thingy52/pressure.component.ts:46\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BluetoothCore, BrowserWebBluetooth, ConsoleLoggerService } from '@manekinekko/angular-web-bluetooth';\nimport { of, Subscription } from 'rxjs';\nimport { SmoothieChart, TimeSeries } from 'smoothie';\nimport { BleService } from '../ble.service';\n\nexport const bleCore = (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l);\nexport const bleService = (b: BluetoothCore) => new BleService(b);\n\n\n// make sure we get a singleton instance of each service\nconst PROVIDERS = [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}];\n\n@Component({\n  selector: 'ble-pressure',\n  template: `\n    \n  `,\n  styles: [`\n  :host {\n    display: block;\n  }\n  canvas {\n    margin-left: -16px;\n  }`],\n  providers: PROVIDERS\n})\nexport class PressureComponent implements OnInit, OnDestroy {\n  series: TimeSeries;\n  chart: SmoothieChart;\n  valuesSubscription: Subscription;\n  streamSubscription: Subscription;\n\n  @ViewChild('chart', { static: true })\n  chartRef: ElementRef;\n\n  get device() {\n    return this.service.getDevice();\n  }\n\n  constructor(\n    public service: BleService,\n    public snackBar: MatSnackBar) {\n\n    service.config({\n      decoder: (value: DataView) => value.getUint32(0,true),\n      characteristic: 'pressure',\n      service: 'environmental_sensing',\n    });\n  }\n\n  ngOnInit() {\n    this.initChart();\n\n    this.streamSubscription = this.service.stream()\n      .subscribe({\n        next: (val: number) => this.updateValue(val),\n        error: (err) => this.hasError(err)\n      });\n  }\n\n  initChart() {\n    this.series = new window.TimeSeries() as TimeSeries;\n    const canvas = this.chartRef.nativeElement;\n    // tslint:disable-next-line: max-line-length\n    this.chart = new window.SmoothieChart({ interpolation: 'step', grid: { fillStyle: '#ffffff', strokeStyle: 'rgba(119,119,119,0.18)', borderVisible: false }, labels: { fillStyle: '#000000', fontSize: 17 }, tooltip: true });\n    this.chart.addTimeSeries(this.series, { lineWidth: 1, strokeStyle: '#ff0000', fillStyle: 'rgba(255,161,161,0.30)' });\n    this.chart.streamTo(canvas);\n    this.chart.stop();\n  }\n\n  requestValue() {\n    this.valuesSubscription = this.service.value()\n      .subscribe(\n        () => null,\n        () => of(this.hasError.bind(this)),\n      );\n  }\n\n\n  updateValue(value: number) {\n    console.log('Reading pressure %d', value);\n    this.series.append(Date.now(), value);\n    this.chart.start();\n  }\n\n\n  disconnect() {\n    this.service.disconnectDevice();\n    this.series.clear();\n    this.chart.stop();\n    this.valuesSubscription.unsubscribe();\n  }\n\n  hasError(error: string) {\n    this.snackBar.open(error, 'Close');\n  }\n\n  ngOnDestroy() {\n    this.valuesSubscription.unsubscribe();\n    this.streamSubscription.unsubscribe();\n  }\n}\n\n    \n\n\n    \n            \n  :host {\n    display: block;\n  }\n  canvas {\n    margin-left: -16px;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DashboardComponent', 'selector': 'ble-dashboard'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'PressureComponent', 'selector': 'ble-pressure'},{'name': 'StepCounterComponent', 'selector': 'ble-stepcounter'},{'name': 'TempComponent', 'selector': 'ble-temp'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PressureComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServerWebBluetooth.html":{"url":"injectables/ServerWebBluetooth.html","title":"injectable - ServerWebBluetooth","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ServerWebBluetooth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/platform/server.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                instance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        instance\n                        \n                    \n                \n            \n            \n                \n                    \n                    instance()\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/platform/server.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ServerWebBluetooth {\n  static instance() {\n    // mocked object for now\n    return {};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StepCounterComponent.html":{"url":"components/StepCounterComponent.html","title":"component - StepCounterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StepCounterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/thingy52/stepcounter.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                PROVIDERS\n                \n            \n\n\n            \n                selector\n                ble-stepcounter\n            \n\n\n            \n                styles\n                \n  :host {\n    display: block;\n  }\n  span {\n    font-size: 5em;\n    position: absolute;\n    top: 112px;\n    left: 214px;\n    width: 120px;\n    display: block;\n    text-align: center;\n  }\n  mat-icon {\n    font-size: 11em;\n    width: 100%;\n    height: 100%;\n  }\n            \n\n            \n                template\n                {{ value || \"000\" }}\ndirections_walk\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                service\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                streamSubscription\n                            \n                            \n                                value\n                            \n                            \n                                valuesSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnect\n                            \n                            \n                                hasError\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                requestValue\n                            \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    device\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: BleService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/thingy52/stepcounter.component.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        BleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/stepcounter.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n            \n                \nhasError(error: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/stepcounter.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/stepcounter.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/stepcounter.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestValue\n                        \n                    \n                \n            \n            \n                \nrequestValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/stepcounter.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateValue\n                        \n                    \n                \n            \n            \n                \nupdateValue(value: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/stepcounter.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BleService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/stepcounter.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/stepcounter.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        streamSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/stepcounter.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/stepcounter.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valuesSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/stepcounter.component.ts:49\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        device\n                    \n                \n\n                \n                    \n                        getdevice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/thingy52/stepcounter.component.ts:53\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BluetoothCore, BrowserWebBluetooth, ConsoleLoggerService } from '@manekinekko/angular-web-bluetooth';\nimport { Subscription } from 'rxjs';\nimport { BleService } from '../ble.service';\n\nexport const bleCore = (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l);\nexport const bleService = (b: BluetoothCore) => new BleService(b);\n\n\n// make sure we get a singleton instance of each service\nconst PROVIDERS = [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}];\n\n@Component({\n  selector: 'ble-stepcounter',\n  template: `\n  {{ value || \"000\" }}\n  directions_walk\n  `,\n  styles: [`\n  :host {\n    display: block;\n  }\n  span {\n    font-size: 5em;\n    position: absolute;\n    top: 112px;\n    left: 214px;\n    width: 120px;\n    display: block;\n    text-align: center;\n  }\n  mat-icon {\n    font-size: 11em;\n    width: 100%;\n    height: 100%;\n  }`],\n  providers: PROVIDERS\n})\nexport class StepCounterComponent implements OnInit, OnDestroy {\n  valuesSubscription: Subscription;\n  streamSubscription: Subscription;\n  value = 0;\n\n  get device() {\n    return this.service.getDevice();\n  }\n\n  constructor(\n    public service: BleService,\n    public snackBar: MatSnackBar) {\n\n    service.config({\n      decoder: (value: DataView) => {\n        const count = value.getUint32(0, true);\n        const time = value.getUint32(4, true);\n        return {\n          count, time\n        };\n      },\n      service: 'ef680400-9b35-4933-9b10-52ffa9740042',\n      characteristic: 'ef680405-9b35-4933-9b10-52ffa9740042'\n    });\n  }\n\n  ngOnInit() {\n    this.streamSubscription = this.service.stream()\n      .subscribe({\n        next: (val: { time: number, count: number }) => this.updateValue(val),\n        error: (err) => this.hasError(err)\n      });\n  }\n\n  requestValue() {\n    this.valuesSubscription = this.service.value()\n      .subscribe(() => null, error => this.hasError.bind(this));\n  }\n\n  updateValue(value: { time: number, count: number }) {\n    console.log('Reading step counter %d', value);\n    this.value = value.count;\n  }\n\n  disconnect() {\n    this.service.disconnectDevice();\n    this.valuesSubscription.unsubscribe();\n  }\n\n  hasError(error: string) {\n    this.snackBar.open(error, 'Close');\n  }\n\n  ngOnDestroy() {\n    this.valuesSubscription.unsubscribe();\n    this.streamSubscription.unsubscribe();\n  }\n}\n\n\n\n    \n\n\n    \n            \n  :host {\n    display: block;\n  }\n  span {\n    font-size: 5em;\n    position: absolute;\n    top: 112px;\n    left: 214px;\n    width: 120px;\n    display: block;\n    text-align: center;\n  }\n  mat-icon {\n    font-size: 11em;\n    width: 100%;\n    height: 100%;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ value || \"000\" }}directions_walk'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DashboardComponent', 'selector': 'ble-dashboard'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'PressureComponent', 'selector': 'ble-pressure'},{'name': 'StepCounterComponent', 'selector': 'ble-stepcounter'},{'name': 'TempComponent', 'selector': 'ble-temp'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StepCounterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TempComponent.html":{"url":"components/TempComponent.html","title":"component - TempComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TempComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/raspberry/temp/temp.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                PROVIDERS\n                \n            \n\n\n            \n                selector\n                ble-temp\n            \n\n\n            \n                styles\n                \n  :host {\n    display: block;\n  }\n  canvas {\n    margin-left: -16px;\n  }\n            \n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chart\n                            \n                            \n                                chartRef\n                            \n                            \n                                series\n                            \n                            \n                                    Public\n                                service\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                streamSubscription\n                            \n                            \n                                valuesSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnect\n                            \n                            \n                                hasError\n                            \n                            \n                                initChart\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                requestValue\n                            \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    device\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: BleService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/raspberry/temp/temp.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        BleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/raspberry/temp/temp.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n            \n                \nhasError(error: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/raspberry/temp/temp.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initChart\n                        \n                    \n                \n            \n            \n                \ninitChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/raspberry/temp/temp.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/raspberry/temp/temp.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/raspberry/temp/temp.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestValue\n                        \n                    \n                \n            \n            \n                \nrequestValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/raspberry/temp/temp.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateValue\n                        \n                    \n                \n            \n            \n                \nupdateValue(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/raspberry/temp/temp.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SmoothieChart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/raspberry/temp/temp.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('chart', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/raspberry/temp/temp.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        series\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TimeSeries\n\n                    \n                \n                    \n                        \n                                Defined in src/app/raspberry/temp/temp.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BleService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/raspberry/temp/temp.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/raspberry/temp/temp.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        streamSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/raspberry/temp/temp.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valuesSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/raspberry/temp/temp.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        device\n                    \n                \n\n                \n                    \n                        getdevice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/raspberry/temp/temp.component.ts:46\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BluetoothCore, BrowserWebBluetooth, ConsoleLoggerService } from '@manekinekko/angular-web-bluetooth';\nimport { Subscription } from 'rxjs';\nimport { SmoothieChart, TimeSeries } from 'smoothie';\nimport { BleService } from '../../ble.service';\n\nexport const bleCore = (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l);\nexport const bleService = (b: BluetoothCore) => new BleService(b);\n\n\n// make sure we get a singleton instance of each service\nconst PROVIDERS = [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}];\n\n@Component({\n  selector: 'ble-temp',\n  template: `\n    \n  `,\n  styles: [`\n  :host {\n    display: block;\n  }\n  canvas {\n    margin-left: -16px;\n  }`],\n  providers: PROVIDERS\n})\nexport class TempComponent implements OnInit, OnDestroy {\n  series: TimeSeries;\n  chart: SmoothieChart;\n  valuesSubscription: Subscription;\n  streamSubscription: Subscription;\n\n  @ViewChild('chart', { static: true })\n  chartRef: ElementRef;\n\n  get device() {\n    return this.service.getDevice();\n  }\n\n  constructor(\n    public service: BleService,\n    public snackBar: MatSnackBar) {\n\n    service.config({\n      characteristic: '2A6E',\n      service: '181A',\n      decoder: (value: DataView) => {\n        const integer = value.getInt8(0);\n        const decimal = value.getUint8(1);\n        return integer + decimal / 100;\n      }\n    });\n\n  }\n\n  ngOnInit() {\n    this.initChart();\n\n    this.streamSubscription = this.service.stream()\n      .subscribe({\n        next: (val: number) => this.updateValue(val),\n        error: (err) => this.hasError(err)\n      });\n  }\n\n  initChart() {\n    this.series = new window.TimeSeries() as TimeSeries;\n    const canvas = this.chartRef.nativeElement;\n    this.chart = new window.SmoothieChart({\n      interpolation: 'step',\n      grid: {\n        fillStyle: '#ffffff',\n        strokeStyle: 'rgba(119,119,119,0.18)',\n        borderVisible: false\n      },\n      labels: {\n        fillStyle: '#000000',\n        fontSize: 17\n      },\n      tooltip: true\n    });\n    this.chart.addTimeSeries(this.series, { lineWidth: 1, strokeStyle: '#ff0000', fillStyle: 'rgba(255,161,161,0.30)' });\n    this.chart.streamTo(canvas);\n    this.chart.stop();\n  }\n\n  requestValue() {\n    this.valuesSubscription = this.service.value()\n      .subscribe(() => null, error => this.hasError.bind(this));\n  }\n\n  updateValue(value: number) {\n    console.log('Reading temperature %d', value);\n    this.series.append(Date.now(), value);\n    this.chart.start();\n  }\n\n  disconnect() {\n    this.service.disconnectDevice();\n    this.series.clear();\n    this.chart.stop();\n    this.valuesSubscription.unsubscribe();\n  }\n\n  hasError(error: string) {\n    this.snackBar.open(error, 'Close');\n  }\n\n  ngOnDestroy() {\n    this.valuesSubscription.unsubscribe();\n    this.streamSubscription.unsubscribe();\n  }\n}\n\n\n\n    \n\n\n    \n            \n  :host {\n    display: block;\n  }\n  canvas {\n    margin-left: -16px;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DashboardComponent', 'selector': 'ble-dashboard'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'PressureComponent', 'selector': 'ble-pressure'},{'name': 'StepCounterComponent', 'selector': 'ble-stepcounter'},{'name': 'TempComponent', 'selector': 'ble-temp'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TempComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TemperatureComponent.html":{"url":"components/TemperatureComponent.html","title":"component - TemperatureComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TemperatureComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/thingy52/temperature.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                PROVIDERS\n                \n            \n\n\n            \n                selector\n                ble-temperature\n            \n\n\n            \n                styles\n                \n  :host {\n    display: block;\n  }\n  canvas {\n    margin-left: -16px;\n  }\n            \n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chart\n                            \n                            \n                                chartRef\n                            \n                            \n                                series\n                            \n                            \n                                    Public\n                                service\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                streamSubscription\n                            \n                            \n                                valuesSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnect\n                            \n                            \n                                hasError\n                            \n                            \n                                initChart\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                requestValue\n                            \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    device\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: BleService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/thingy52/temperature.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        BleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/temperature.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n            \n                \nhasError(error: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/temperature.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initChart\n                        \n                    \n                \n            \n            \n                \ninitChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/temperature.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/temperature.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/temperature.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestValue\n                        \n                    \n                \n            \n            \n                \nrequestValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/temperature.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateValue\n                        \n                    \n                \n            \n            \n                \nupdateValue(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/temperature.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SmoothieChart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/temperature.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('chart', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/temperature.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        series\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TimeSeries\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/temperature.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BleService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/temperature.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/temperature.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        streamSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/temperature.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valuesSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/temperature.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        device\n                    \n                \n\n                \n                    \n                        getdevice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/thingy52/temperature.component.ts:46\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BluetoothCore, BrowserWebBluetooth, ConsoleLoggerService } from '@manekinekko/angular-web-bluetooth';\nimport { Subscription } from 'rxjs';\nimport { SmoothieChart, TimeSeries } from 'smoothie';\nimport { BleService } from '../ble.service';\n\nexport const bleCore = (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l);\nexport const bleService = (b: BluetoothCore) => new BleService(b);\n\n\n// make sure we get a singleton instance of each service\nconst PROVIDERS = [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}];\n\n@Component({\n  selector: 'ble-temperature',\n  template: `\n    \n  `,\n  styles: [`\n  :host {\n    display: block;\n  }\n  canvas {\n    margin-left: -16px;\n  }`],\n  providers: PROVIDERS\n})\nexport class TemperatureComponent implements OnInit, OnDestroy {\n  series: TimeSeries;\n  chart: SmoothieChart;\n  valuesSubscription: Subscription;\n  streamSubscription: Subscription;\n\n  @ViewChild('chart', { static: true })\n  chartRef: ElementRef;\n\n  get device() {\n    return this.service.getDevice();\n  }\n\n  constructor(\n    public service: BleService,\n    public snackBar: MatSnackBar) {\n\n    service.config({\n      decoder: (value: DataView) => value.getInt16(0, true),\n      characteristic: 'temperature',\n      service: 'environmental_sensing',\n      // decoder: (value: DataView) => {\n      //   const integer = value.getInt8(0);\n      //   const decimal = value.getUint8(1);\n      //   return integer + decimal / 100;\n      // }\n    });\n\n  }\n\n  ngOnInit() {\n    this.initChart();\n\n    this.streamSubscription = this.service.stream()\n      .subscribe({\n        next: (val: number) => this.updateValue(val),\n        error: (err) => this.hasError(err)\n      });\n  }\n\n  initChart() {\n    this.series = new window.TimeSeries() as TimeSeries;\n    const canvas = this.chartRef.nativeElement;\n    this.chart = new window.SmoothieChart({\n      interpolation: 'step',\n      grid: {\n        fillStyle: '#ffffff',\n        strokeStyle: 'rgba(119,119,119,0.18)',\n        borderVisible: false\n      },\n      labels: {\n        fillStyle: '#000000',\n        fontSize: 17\n      },\n      tooltip: true\n    });\n    this.chart.addTimeSeries(this.series, { lineWidth: 1, strokeStyle: '#ff0000', fillStyle: 'rgba(255,161,161,0.30)' });\n    this.chart.streamTo(canvas);\n    this.chart.stop();\n  }\n\n  requestValue() {\n    this.valuesSubscription = this.service.value()\n      .subscribe(() => null, error => this.hasError.bind(this));\n  }\n\n  updateValue(value: number) {\n    console.log('Reading temperature %d', value);\n    this.series.append(Date.now(), value);\n    this.chart.start();\n  }\n\n  disconnect() {\n    this.service.disconnectDevice();\n    this.series.clear();\n    this.chart.stop();\n    this.valuesSubscription.unsubscribe();\n  }\n\n  hasError(error: string) {\n    this.snackBar.open(error, 'Close');\n  }\n\n  ngOnDestroy() {\n    this.valuesSubscription.unsubscribe();\n    this.streamSubscription.unsubscribe();\n  }\n}\n\n\n\n    \n\n\n    \n            \n  :host {\n    display: block;\n  }\n  canvas {\n    margin-left: -16px;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DashboardComponent', 'selector': 'ble-dashboard'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'PressureComponent', 'selector': 'ble-pressure'},{'name': 'StepCounterComponent', 'selector': 'ble-stepcounter'},{'name': 'TempComponent', 'selector': 'ble-temp'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TemperatureComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WebBluetoothModule.html":{"url":"modules/WebBluetoothModule.html","title":"module - WebBluetoothModule","body":"\n                   \n\n\n\n\n    Modules\n    WebBluetoothModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: AWBOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AWBOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders, InjectionToken, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BluetoothCore } from './bluetooth.service';\nimport { BrowserWebBluetooth } from './platform/browser';\n\nimport { ConsoleLoggerService, NoLoggerService } from './logger.service';\n\nexport interface AWBOptions {\n  enableTracing?: boolean;\n}\n\nexport function browserWebBluetooth() {\n  return new BrowserWebBluetooth();\n}\n\nexport function consoleLoggerServiceConfig(options: AWBOptions) {\n  if (options && options.enableTracing) {\n    return new ConsoleLoggerService();\n  } else {\n    return new NoLoggerService();\n  }\n}\nexport function makeMeTokenInjector() {\n  return new InjectionToken('AWBOptions');\n}\n\n@NgModule({\n  imports: [CommonModule]\n})\nexport class WebBluetoothModule {\n  static forRoot(options: AWBOptions = {}): ModuleWithProviders {\n    return {\n      ngModule: WebBluetoothModule,\n      providers: [\n        BluetoothCore,\n        {\n          provide: BrowserWebBluetooth,\n          useFactory: browserWebBluetooth\n        },\n        {\n          provide: makeMeTokenInjector,\n          useValue: options\n        },\n        {\n          provide: ConsoleLoggerService,\n          useFactory: consoleLoggerServiceConfig,\n          deps: [makeMeTokenInjector]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts\n            \n            interface\n            AWBOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts\n            \n            function\n            browserWebBluetooth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts\n            \n            function\n            consoleLoggerServiceConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts\n            \n            function\n            makeMeTokenInjector\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.service.ts\n            \n            injectable\n            BluetoothCore\n            \n                67 %\n                (21/31)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/lang/uuids/ti-sensortag2.ts\n            \n            variable\n            TI_SENSORAG_SERVICES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/lang/uuids/ti-sensortag2.ts\n            \n            variable\n            TiTag\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts\n            \n            injectable\n            ConsoleLoggerService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts\n            \n            injectable\n            NoLoggerService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts\n            \n            interface\n            Logger\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/platform/browser.ts\n            \n            injectable\n            BrowserWebBluetooth\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/platform/server.ts\n            \n            injectable\n            ServerWebBluetooth\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n            \n            class\n            FakeBluetoothDevice\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n            \n            class\n            FakeBluetoothRemoteGATTCharacteristic\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n            \n            class\n            FakeBluetoothRemoteGATTServer\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n            \n            class\n            FakeBluetoothRemoteGATTService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ble.service.ts\n            \n            injectable\n            BleService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/raspberry/temp/temp.component.ts\n            \n            component\n            TempComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/raspberry/temp/temp.component.ts\n            \n            variable\n            bleCore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/raspberry/temp/temp.component.ts\n            \n            variable\n            bleService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/raspberry/temp/temp.component.ts\n            \n            variable\n            PROVIDERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/battery-level.component.ts\n            \n            component\n            BatteryLevelComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/thingy52/battery-level.component.ts\n            \n            variable\n            bleCore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/battery-level.component.ts\n            \n            variable\n            bleService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/battery-level.component.ts\n            \n            variable\n            PROVIDERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/humidity.component.ts\n            \n            component\n            HumidityComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/thingy52/humidity.component.ts\n            \n            variable\n            bleCore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/humidity.component.ts\n            \n            variable\n            bleService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/humidity.component.ts\n            \n            variable\n            PROVIDERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/pressure.component.ts\n            \n            component\n            PressureComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/thingy52/pressure.component.ts\n            \n            variable\n            bleCore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/pressure.component.ts\n            \n            variable\n            bleService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/pressure.component.ts\n            \n            variable\n            PROVIDERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/stepcounter.component.ts\n            \n            component\n            StepCounterComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/thingy52/stepcounter.component.ts\n            \n            variable\n            bleCore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/stepcounter.component.ts\n            \n            variable\n            bleService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/stepcounter.component.ts\n            \n            variable\n            PROVIDERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/temperature.component.ts\n            \n            component\n            TemperatureComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/thingy52/temperature.component.ts\n            \n            variable\n            bleCore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/temperature.component.ts\n            \n            variable\n            bleService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/temperature.component.ts\n            \n            variable\n            PROVIDERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.1.5\n        \n            @angular/cdk : ^15.1.5\n        \n            @angular/common : ^15.1.5\n        \n            @angular/compiler : ^15.1.5\n        \n            @angular/core : ^15.1.5\n        \n            @angular/forms : ^15.1.5\n        \n            @angular/material : ^15.1.5\n        \n            @angular/platform-browser : ^15.1.5\n        \n            @angular/platform-browser-dynamic : ^15.1.5\n        \n            @angular/router : ^15.1.5\n        \n            @release-it/conventional-changelog : ^5.1.1\n        \n            @types/web-bluetooth : 0.0.6\n        \n            rxjs : ~7.8.0\n        \n            smoothie : ^1.35.0\n        \n            ts-jest : ^29.0.5\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            browserWebBluetooth   (projects/.../bluetooth.module.ts)\n                        \n                        \n                            consoleLoggerServiceConfig   (projects/.../bluetooth.module.ts)\n                        \n                        \n                            makeMeTokenInjector   (projects/.../bluetooth.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        browserWebBluetooth\n                        \n                    \n                \n            \n            \n                \nbrowserWebBluetooth()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consoleLoggerServiceConfig\n                        \n                    \n                \n            \n            \n                \nconsoleLoggerServiceConfig(options: AWBOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AWBOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeMeTokenInjector\n                        \n                    \n                \n            \n            \n                \nmakeMeTokenInjector()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nwot-project-part2-Cyber-Vadok\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WebBluetoothModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBatteryLevelComponent\n\nBatteryLevelComponent\n\nAppModule -->\n\nBatteryLevelComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nHumidityComponent\n\nHumidityComponent\n\nAppModule -->\n\nHumidityComponent->AppModule\n\n\n\n\n\nPressureComponent\n\nPressureComponent\n\nAppModule -->\n\nPressureComponent->AppModule\n\n\n\n\n\nStepCounterComponent\n\nStepCounterComponent\n\nAppModule -->\n\nStepCounterComponent->AppModule\n\n\n\n\n\nTempComponent\n\nTempComponent\n\nAppModule -->\n\nTempComponent->AppModule\n\n\n\n\n\nTemperatureComponent\n\nTemperatureComponent\n\nAppModule -->\n\nTemperatureComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nWebBluetoothModule\n\nWebBluetoothModule\n\nAppModule -->\n\nWebBluetoothModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 15.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ReadValueOptions   (projects/.../bluetooth.service.ts)\n                        \n                        \n                            ServiceOptions   (src/.../ble.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.service.ts\n    \n    \n        \n            \n                \n                    \n                    ReadValueOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/ble.service.ts\n    \n    \n        \n            \n                \n                    \n                    ServiceOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bleCore   (src/.../battery-level.component.ts)\n                        \n                        \n                            bleCore   (src/.../humidity.component.ts)\n                        \n                        \n                            bleCore   (src/.../pressure.component.ts)\n                        \n                        \n                            bleCore   (src/.../stepcounter.component.ts)\n                        \n                        \n                            bleCore   (src/.../temperature.component.ts)\n                        \n                        \n                            bleCore   (src/.../temp.component.ts)\n                        \n                        \n                            bleService   (src/.../battery-level.component.ts)\n                        \n                        \n                            bleService   (src/.../humidity.component.ts)\n                        \n                        \n                            bleService   (src/.../pressure.component.ts)\n                        \n                        \n                            bleService   (src/.../stepcounter.component.ts)\n                        \n                        \n                            bleService   (src/.../temperature.component.ts)\n                        \n                        \n                            bleService   (src/.../temp.component.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            PROVIDERS   (src/.../battery-level.component.ts)\n                        \n                        \n                            PROVIDERS   (src/.../humidity.component.ts)\n                        \n                        \n                            PROVIDERS   (src/.../pressure.component.ts)\n                        \n                        \n                            PROVIDERS   (src/.../stepcounter.component.ts)\n                        \n                        \n                            PROVIDERS   (src/.../temperature.component.ts)\n                        \n                        \n                            PROVIDERS   (src/.../temp.component.ts)\n                        \n                        \n                            TI_SENSORAG_SERVICES   (projects/.../ti-sensortag2.ts)\n                        \n                        \n                            TiTag   (projects/.../ti-sensortag2.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/thingy52/battery-level.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bleCore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bleService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (b: BluetoothCore) => new BleService(b)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROVIDERS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}]\n                    \n                \n\n\n        \n    \n\n    src/app/thingy52/humidity.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bleCore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bleService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (b: BluetoothCore) => new BleService(b)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROVIDERS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}]\n                    \n                \n\n\n        \n    \n\n    src/app/thingy52/pressure.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bleCore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bleService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (b: BluetoothCore) => new BleService(b)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROVIDERS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}]\n                    \n                \n\n\n        \n    \n\n    src/app/thingy52/stepcounter.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bleCore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bleService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (b: BluetoothCore) => new BleService(b)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROVIDERS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}]\n                    \n                \n\n\n        \n    \n\n    src/app/thingy52/temperature.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bleCore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bleService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (b: BluetoothCore) => new BleService(b)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROVIDERS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}]\n                    \n                \n\n\n        \n    \n\n    src/app/raspberry/temp/temp.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bleCore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bleService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (b: BluetoothCore) => new BleService(b)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROVIDERS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}]\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    projects/manekinekko/angular-web-bluetooth/src/lib/lang/uuids/ti-sensortag2.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TI_SENSORAG_SERVICES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.keys(TiTag).map(key => TiTag[key].SERVICE)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TiTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\n  DEVICE_INFORMATION : {\n    SERVICE :                 'f000180a-0451-4000-b000-000000000000',\n    SYSTEM_ID :               'f0002a23-0451-4000-b000-000000000000',\n    MODEL_NUMBER :            'f0002a24-0451-4000-b000-000000000000',\n    SERIAL_NUMBER :           'f0002a25-0451-4000-b000-000000000000',\n    FIRMWARE_REV :            'f0002a26-0451-4000-b000-000000000000',\n    HARDWARE_REV :            'f0002a27-0451-4000-b000-000000000000',\n    SOFTWARE_REV :            'f0002a28-0451-4000-b000-000000000000',\n    MANIFACTURER :            'f0002a29-0451-4000-b000-000000000000',\n    IEEE11073 :               'f0002a2a-0451-4000-b000-000000000000',\n    PNP_ID :                  'f0002a50-0451-4000-b000-000000000000'\n  },\n\n  BATTERY : {\n    SERVICE :                 'f000180f-0451-4000-b000-000000000000',\n    LEVEL :                   'f0002a19-0451-4000-b000-000000000000'\n  },\n\n  TEMPERATURE : {\n    SERVICE :                 'f000aa00-0451-4000-b000-000000000000',\n    DATA :                    'f000aa01-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa02-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa03-0451-4000-b000-000000000000'\n  },\n\n  HUMIDITY : {\n    SERVICE :                 'f000aa20-0451-4000-b000-000000000000',\n    DATA :                    'f000aa21-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa22-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa23-0451-4000-b000-000000000000'\n  },\n\n  BAROMETER : {\n    SERVICE :                 'f000aa40-0451-4000-b000-000000000000',\n    DATA :                    'f000aa41-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa42-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa44-0451-4000-b000-000000000000'\n  },\n\n  // service not available in model CC2650\n  // ACCELEROMETER : {\n  //   SERVICE :                 'f000aa10-0451-4000-b000-000000000000',\n  //   DATA :                    'f000aa11-0451-4000-b000-000000000000',\n  //   CONFIGURATION :           'f000aa12-0451-4000-b000-000000000000',\n  //   PERIOD :                  'f000aa13-0451-4000-b000-000000000000'\n  // },\n\n  // service not available in model CC2650\n  // MAGNETOMETER : {\n  //   SERVICE :                 'f000aa30-0451-4000-b000-000000000000',\n  //   DATA :                    'f000aa31-0451-4000-b000-000000000000',\n  //   CONFIGURATION :           'f000aa32-0451-4000-b000-000000000000',\n  //   PERIOD :                  'f000aa33-0451-4000-b000-000000000000'\n  // },\n\n  // service not available in model CC2650\n  // GYROSCOPE : {\n  //   SERVICE :                 'f000aa50-0451-4000-b000-000000000000',\n  //   DATA :                    'f000aa51-0451-4000-b000-000000000000',\n  //   CONFIGURATION :           'f000aa52-0451-4000-b000-000000000000',\n  //   PERIOD :                  'f000aa53-0451-4000-b000-000000000000'\n  // },\n\n  MOVEMENT : {\n    SERVICE :                 'f000aa80-0451-4000-b000-000000000000',\n    DATA :                    'f000aa81-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa82-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa83-0451-4000-b000-000000000000'\n  },\n\n  LIGHT : {\n    SERVICE :                 'f000aa70-0451-4000-b000-000000000000',\n    DATA :                    'f000aa71-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa72-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa73-0451-4000-b000-000000000000'\n  },\n\n  KEYPRESS : {\n    SERVICE :                 'f000ffe0-0451-4000-b000-000000000000',\n    STATE :                   'f000ffe1-0451-4000-b000-000000000000'\n  },\n\n  __REGISTER__ : {\n    SERVICE :                 'f000ac00-0451-4000-b000-000000000000',\n    DATA :                    'f000ac01-0451-4000-b000-000000000000',\n    ADDRESS :                 'f000ac02-0451-4000-b000-000000000000',\n    DEVICE_ID :               'f000ac03-0451-4000-b000-000000000000'\n  },\n\n  CONTROL : {\n    SERVICE :                 'f000ccc0-0451-4000-b000-000000000000',\n    CURRENT_USED_PARAMETERS : 'f000ccc1-0451-4000-b000-000000000000',\n    REQUEST_NEW_PARAMETERS :  'f000ccc2-0451-4000-b000-000000000000',\n    DISCONNECT_REQUEST :      'f000ccc3-0451-4000-b000-000000000000'\n  },\n\n  OAD : {\n    SERVICE :                 'f000ffc0-0451-4000-b000-000000000000',\n    IMAGE_NOTIFY :            'f000ffc1-0451-4000-b000-000000000000',\n    IMAGE_BLOCK_REQUEST :     'f000ffc2-0451-4000-b000-000000000000',\n    IMAGE_COUNT :             'f000ffc3-0451-4000-b000-000000000000',\n    IMAGE_STATUS :            'f000ffc4-0451-4000-b000-000000000000'\n  },\n\n  IO : {\n    SERVICE :                 'f000aa64-0451-4000-b000-000000000000',\n    DATA :                    'f000aa65-0451-4000-b000-000000000000',\n    CONFIG :                  'f000aa66-0451-4000-b000-000000000000'\n  }\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
